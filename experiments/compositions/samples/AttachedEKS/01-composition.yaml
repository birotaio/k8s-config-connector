# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: attachedekses.idp.mycompany.com
spec:
  conversion:
    strategy: None
  group: idp.mycompany.com
  names:
    categories:
    - facade
    - facades
    kind: AttachedEKS
    listKind: AttachedEKSList
    plural: attachedekses
    singular: attachedeks
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TODO
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            description: AttachedEKS defines the parameters for attaching EKS cluster
              to GCP.
            properties:
              adminUsers:
                items:
                  type: string
                type: array
              attachedPlatformVersion:
                type: string
              awsAccessIdentity:
                type: string
              awsAvailabilityZones:
                items:
                  properties:
                    privateSubnet:
                      type: string
                    publicSubnet:
                      type: string
                    zoneNameSuffix:
                      type: string
                  type: object
                type: array
              awsRegion:
                type: string
              gcpProjectNumber:
                type: string
              gcpRegion:
                type: string
              kubernetesVersion:
                type: string
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      description: human readable message
                      maxLength: 1024
                      type: string
                    observedGeneration:
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      maxLength: 256
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: composition.google.com/v1alpha1
kind: GetterConfiguration
metadata:
  name: eks-issuer
  namespace: default
spec:
  valuesFrom:
  - name: issuer
    resourceRef:
      group: ""
      version: v1
      kind: ConfigMap
      resource: configmaps
      nameSuffix: "-eks-issuer"
    fieldRef:
    - path: ".data.oidc"
      as: url
---
apiVersion: composition.google.com/v1alpha1
kind: GetterConfiguration
metadata:
  name: subnet-ids
  namespace: default
spec:
  valuesFrom:
  - name: subnet
    resourceRef:
      group: ""
      version: v1
      kind: ConfigMap
      resource: configmaps
      nameSuffix: "-subnet-ids"
    fieldRef:
    - path: ".data"
      as: ids
---
apiVersion: composition.google.com/v1alpha1
kind: Composition
metadata:
  name: compo-eks-1
  namespace: default
spec:
  inputAPIGroup: attachedekses.idp.mycompany.com
  expanders:
  - type: jinja2
    version: v0.0.1
    name: create-vpc
    template: |
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: VPC
      metadata:
        name: {{ attachedekses.metadata.name }}-vpc
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        cidrBlocks:
        - "10.0.0.0/16"
        enableDNSSupport: true
        enableDNSHostnames: true
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-vpc
  - type: jinja2
    version: v0.0.1
    name: create-route-tables
    template: |
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: InternetGateway
      metadata:
        name: {{ attachedekses.metadata.name }}-igw
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        vpcRef:
          from:
            name: {{ attachedekses.metadata.name }}-vpc
        # routeTableRefs:
        # - from:
        #     name: {{ attachedekses.metadata.name }}-public-rt
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-igw
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: RouteTable
      metadata:
        name: {{ attachedekses.metadata.name }}-public-rt
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        vpcRef:
          from:
            name: {{ attachedekses.metadata.name }}-vpc
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-public-rt
        routes:
        - destinationCIDRBlock: "0.0.0.0/0"
          gatewayRef:
            from:
              name: {{ attachedekses.metadata.name }}-igw
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: RouteTable
      metadata:
        name: {{ attachedekses.metadata.name }}-private-rt
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        vpcRef:
          from:
            name: {{ attachedekses.metadata.name }}-vpc
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-private-rt
  - type: jinja2
    version: v0.0.1
    name: create-subnets
    template: |
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: {{ attachedekses.metadata.name }}-subnet-ids
        namespace: {{ attachedekses.metadata.namespace }}
      data: {}
      {% for zone in attachedekses.spec.awsAvailabilityZones %}
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: Subnet
      metadata:
        name: {{ attachedekses.metadata.name }}-public-{{ zone.zoneNameSuffix }}
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        vpcRef:
          from:
            name: {{ attachedekses.metadata.name }}-vpc
        availabilityZone: {{ attachedekses.spec.awsRegion }}{{ zone.zoneNameSuffix }}
        cidrBlock: {{ zone.publicSubnet }}
        mapPublicIPOnLaunch: true
        routeTableRefs:
          - from:
              name: {{ attachedekses.metadata.name }}-public-rt
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-public-{{ zone.zoneNameSuffix }}
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: Subnet
      metadata:
        name: {{ attachedekses.metadata.name }}-private-{{ zone.zoneNameSuffix }}
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        vpcRef:
          from:
            name: {{ attachedekses.metadata.name }}-vpc
        availabilityZone: {{ attachedekses.spec.awsRegion }}{{ zone.zoneNameSuffix }}
        cidrBlock: {{ zone.privateSubnet }}
        routeTableRefs:
          - from:
              name: {{ attachedekses.metadata.name }}-private-rt
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-private-{{ zone.zoneNameSuffix }}
      ---
      apiVersion: services.k8s.aws/v1alpha1
      kind: FieldExport
      metadata:
        name: {{ attachedekses.metadata.name }}-subnet-id-export-{{ zone.zoneNameSuffix }}
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        from:
          path: ".status.subnetID"
          resource:
            group: ec2.services.k8s.aws
            kind: Subnet
            name: {{ attachedekses.metadata.name }}-public-{{ zone.zoneNameSuffix }}
        to:
          key: {{ attachedekses.metadata.name }}-public-{{ zone.zoneNameSuffix }}
          kind: configmap
          name: {{ attachedekses.metadata.name }}-subnet-ids
          namespace: {{ attachedekses.metadata.namespace }}
      {% endfor %}
  - type: jinja2
    version: v0.0.1
    name: create-nat
    template: |
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: ElasticIPAddress
      metadata:
        name: {{ attachedekses.metadata.name }}-nat-ip
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-nat-ip
      ---
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: NATGateway
      metadata:
        name: {{ attachedekses.metadata.name }}-nat
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        allocationRef:
          from:
            name: {{ attachedekses.metadata.name }}-nat-ip
        subnetRef:
          from:
            name: {{ attachedekses.metadata.name }}-public-{{ attachedekses.spec.awsAvailabilityZones[0].zoneNameSuffix }}
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-nat
  - type: jinja2
    version: v0.0.1
    name: create-role
    template: |
      ---
      apiVersion: iam.services.k8s.aws/v1alpha1
      kind: Role
      metadata:
        name: {{ attachedekses.metadata.name }}-cluster-role
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        name: {{ attachedekses.metadata.name }}-cluster-role
        assumeRolePolicyDocument: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "eks.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        policies:
        - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-cluster-role
      ---
      apiVersion: iam.services.k8s.aws/v1alpha1
      kind: Role
      metadata:
        name: {{ attachedekses.metadata.name }}-node-role
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        name: {{ attachedekses.metadata.name }}-node-role
        assumeRolePolicyDocument: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        policies:
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        tags:
          - key: Name
            value: {{ attachedekses.metadata.name }}-node-role
  - type: getter
    version: v0.0.1
    name: subnet-ids
    template: ""
    configref:
      name: subnet-ids
      namespace: default
  - type: jinja2
    version: v0.0.1
    name: create-eks-cluster
    template: |
      ---
      apiVersion: eks.services.k8s.aws/v1alpha1
      kind: Cluster
      metadata:
        name: {{ attachedekses.metadata.name }}-cluster
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        name: {{ attachedekses.metadata.name }}-cluster
        version: "{{ attachedekses.spec.kubernetesVersion }}"
        roleRef:
          from:
            name: {{ attachedekses.metadata.name }}-cluster-role
        accessConfig:
          authenticationMode: "API_AND_CONFIG_MAP"
        resourcesVPCConfig:
          endpointPrivateAccess: true
          endpointPublicAccess: true
          subnetIDs:
          {% for key, value in values.subnet.ids|items %}
          - {{ value }}
          {% endfor %}
      ---
      apiVersion: eks.services.k8s.aws/v1alpha1
      kind: Nodegroup
      metadata:
        name: {{ attachedekses.metadata.name }}-np
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        name: {{ attachedekses.metadata.name }}-np
        clusterName: {{ attachedekses.metadata.name }}-cluster
        subnetRefs:
        {% for zone in attachedekses.spec.awsAvailabilityZones %}
        - from:
            name: {{ attachedekses.metadata.name }}-public-{{ zone.zoneNameSuffix }}
        {% endfor %}
        nodeRoleRef:
          from:
            name: {{ attachedekses.metadata.name }}-node-role
        scalingConfig:
          minSize: 1
          maxSize: 2
          desiredSize: 1
        version: "{{ attachedekses.spec.kubernetesVersion }}"
      ---
      apiVersion: eks.services.k8s.aws/v1alpha1
      kind: AccessEntry
      metadata:
        name: {{ attachedekses.metadata.name }}-access
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        clusterName: {{ attachedekses.metadata.name }}-cluster
        principalARN: {{ attachedekses.spec.awsAccessIdentity }}
        accessPolicies:
        - policyARN: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
          accessScope:
            type: cluster
        kubernetesGroups:
        - defaultUsers
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: {{ attachedekses.metadata.name }}-eks-issuer
        namespace: {{ attachedekses.metadata.namespace }}
      data: {}
      ---
  - type: jinja2
    version: v0.0.1
    name: export-eks-data
    template: |
      ---
      apiVersion: services.k8s.aws/v1alpha1
      kind: FieldExport
      metadata:
        name: {{ attachedekses.metadata.name }}-export
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        from:
          path: ".status.identity.oidc.issuer"
          resource:
            group: eks.services.k8s.aws
            kind: Cluster
            name: {{ attachedekses.metadata.name }}-cluster
        to:
          key: oidc
          kind: configmap
          name: {{ attachedekses.metadata.name }}-eks-issuer
          namespace: {{ attachedekses.metadata.namespace }}
      ---
  - type: getter
    version: v0.0.1
    name: eks-issuer
    template: ""
    configref:
      name: eks-issuer
      namespace: default
  - type: jinja2
    version: v0.0.1
    name: attach
    template: |
      apiVersion: containerattached.cnrm.cloud.google.com/v1beta1
      kind: ContainerAttachedCluster
      metadata:
        name: {{ attachedekses.metadata.name }}-attached
        namespace: {{ attachedekses.metadata.namespace }}
      spec:
        resourceID: {{ attachedekses.metadata.name }}
        location: {{ attachedekses.spec.gcpRegion }}
        projectRef:
          external: {{ context.spec.project }}
        description: "Test composition with EKS"
        distribution: eks
        oidcConfig:
          issuerUrl: {{ values.issuer.url }}
        platformVersion: {{ attachedekses.spec.attachedPlatformVersion }}
        fleet:
          projectRef:
            external: "projects/{{ attachedekses.spec.gcpProjectNumber }}"
        authorization:
          adminUsers: {{ attachedekses.spec.adminUsers }}


