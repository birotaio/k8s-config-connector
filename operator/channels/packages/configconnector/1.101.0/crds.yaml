#fixed-at:1682325307
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: cloudschedulerjobs.cloudscheduler.cnrm.cloud.google.com
spec:
  group: cloudscheduler.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: CloudSchedulerJob
    plural: cloudschedulerjobs
    shortNames:
    - gcpcloudschedulerjob
    - gcpcloudschedulerjobs
    singular: cloudschedulerjob
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appEngineHttpTarget:
                description: App Engine HTTP target.
                properties:
                  appEngineRouting:
                    description: App Engine Routing setting for the job.
                    properties:
                      instance:
                        description: App instance. By default, the job is sent to
                          an instance which is available when the job is attempted.
                          Requests can only be sent to a specific instance if [manual
                          scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
                          App Engine Flex does not support instances. For more information,
                          see [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
                          and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
                        type: string
                      service:
                        description: App service. By default, the job is sent to the
                          service which is the default service when the job is attempted.
                        type: string
                      version:
                        description: App version. By default, the job is sent to the
                          version which is the default version when the job is attempted.
                        type: string
                    type: object
                  body:
                    description: Body. HTTP request body. A request body is allowed
                      only if the HTTP method is POST or PUT. It will result in invalid
                      argument error to set a body on a job with an incompatible HttpMethod.
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: 'HTTP request headers. This map contains the header
                      field names and values. Headers can be set when the job is created.
                      Cloud Scheduler sets some headers to default values: * `User-Agent`:
                      By default, this header is `"App Engine-Google; (+http://code.google.com/appengine)"`.
                      This header can be modified, but Cloud Scheduler will append
                      `"App Engine-Google; (+http://code.google.com/appengine)"` to
                      the modified `User-Agent`. * `X-CloudScheduler`: This header
                      will be set to true. The headers below are output only. They
                      cannot be set or overridden: * `X-Google-*`: For Google internal
                      use only. * `X-App Engine-*`: For Google internal use only.
                      In addition, some App Engine headers, which contain job-specific
                      information, are also be sent to the job handler.'
                    type: object
                  httpMethod:
                    description: 'The HTTP method to use for the request. PATCH and
                      OPTIONS are not permitted. Possible values: HTTP_METHOD_UNSPECIFIED,
                      POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS'
                    type: string
                  relativeUri:
                    description: The relative URI. The relative URL must begin with
                      "/" and must be a valid HTTP relative URL. It can contain a
                      path, query string arguments, and `#` fragments. If the relative
                      URL is empty, then the root path "/" will be used. No spaces
                      are allowed, and the maximum length allowed is 2083 characters.
                    type: string
                type: object
              attemptDeadline:
                description: 'The deadline for job attempts. If the request handler
                  does not respond by this deadline then the request is cancelled
                  and the attempt is marked as a `DEADLINE_EXCEEDED` failure. The
                  failed attempt can be viewed in execution logs. Cloud Scheduler
                  will retry the job according to the RetryConfig. The allowed duration
                  for this deadline is: * For HTTP targets, between 15 seconds and
                  30 minutes. * For App Engine HTTP targets, between 15 seconds and
                  24 hours.'
                type: string
              description:
                description: Optionally caller-specified in CreateJob or UpdateJob.
                  A human-readable description for the job. This string must not contain
                  more than 500 characters.
                type: string
              httpTarget:
                description: HTTP target.
                properties:
                  body:
                    description: HTTP request body. A request body is allowed only
                      if the HTTP method is POST, PUT, or PATCH. It is an error to
                      set body on a job with an incompatible HttpMethod.
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: 'The user can specify HTTP request headers to send
                      with the job''s HTTP request. This map contains the header field
                      names and values. Repeated headers are not supported, but a
                      header value can contain commas. These headers represent a subset
                      of the headers that will accompany the job''s HTTP request.
                      Some HTTP request headers will be ignored or replaced. A partial
                      list of headers that will be ignored or replaced is below: -
                      Host: This will be computed by Cloud Scheduler and derived from
                      uri. * `Content-Length`: This will be computed by Cloud Scheduler.
                      * `User-Agent`: This will be set to `"Google-Cloud-Scheduler"`.
                      * `X-Google-*`: Google internal use only. * `X-appengine-*`:
                      Google internal use only. The total size of headers must be
                      less than 80KB.'
                    type: object
                  httpMethod:
                    description: 'Which HTTP method to use for the request. Possible
                      values: HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE,
                      PATCH, OPTIONS'
                    type: string
                  oauthToken:
                    description: If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2)
                      will be generated and attached as an `Authorization` header
                      in the HTTP request. This type of authorization should generally
                      only be used when calling Google APIs hosted on *.googleapis.com.
                    properties:
                      scope:
                        description: OAuth scope to be used for generating OAuth access
                          token. If not specified, "https://www.googleapis.com/auth/cloud-platform"
                          will be used.
                        type: string
                      serviceAccountRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OAuth token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account.

                              Allowed value: The `email` field of an `IAMServiceAccount` resource.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    type: object
                  oidcToken:
                    description: If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect)
                      token will be generated and attached as an `Authorization` header
                      in the HTTP request. This type of authorization can be used
                      for many scenarios, including calling Cloud Run, or endpoints
                      where you intend to validate the token yourself.
                    properties:
                      audience:
                        description: Audience to be used when generating OIDC token.
                          If not specified, the URI specified in target will be used.
                        type: string
                      serviceAccountRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OIDC token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account.

                              Allowed value: The `email` field of an `IAMServiceAccount` resource.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    type: object
                  uri:
                    description: 'Required. The full URI path that the request will
                      be sent to. This string must begin with either "http://" or
                      "https://". Some examples of valid values for uri are: `http://acme.com`
                      and `https://acme.com/sales:8080`. Cloud Scheduler will encode
                      some characters for safety and compatibility. The maximum allowed
                      URL length is 2083 characters after encoding.'
                    type: string
                required:
                - uri
                type: object
              location:
                description: Immutable. The location for the resource
                type: string
              pubsubTarget:
                description: Pub/Sub target.
                properties:
                  attributes:
                    additionalProperties:
                      type: string
                    description: Attributes for PubsubMessage. Pubsub message must
                      contain either non-empty data, or at least one attribute.
                    type: object
                  data:
                    description: The message payload for PubsubMessage. Pubsub message
                      must contain either non-empty data, or at least one attribute.
                    type: string
                  topicRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: |-
                          Required. The name of the Cloud Pub/Sub topic to which messages will be published when a job is delivered. The topic name must be in the same format as required by Pub/Sub's [PublishRequest.name](https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#publishrequest), for example `projects/PROJECT_ID/topics/TOPIC_ID`. The topic must be in the same project as the Cloud Scheduler job.

                          Allowed value: The Google Cloud resource name of a `PubSubTopic` resource (format: `projects/{{project}}/topics/{{name}}`).
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                required:
                - topicRef
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              retryConfig:
                description: Settings that determine the retry behavior.
                properties:
                  maxBackoffDuration:
                    description: The maximum amount of time to wait before retrying
                      a job after it fails. The default value of this field is 1 hour.
                    type: string
                  maxDoublings:
                    description: The time between retries will double `max_doublings`
                      times. A job's retry interval starts at min_backoff_duration,
                      then doubles `max_doublings` times, then increases linearly,
                      and finally retries at intervals of max_backoff_duration up
                      to retry_count times. For example, if min_backoff_duration is
                      10s, max_backoff_duration is 300s, and `max_doublings` is 3,
                      then the a job will first be retried in 10s. The retry interval
                      will double three times, and then increase linearly by 2^3 *
                      10s. Finally, the job will retry at intervals of max_backoff_duration
                      until the job has been attempted retry_count times. Thus, the
                      requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s,
                      300s, .... The default value of this field is 5.
                    format: int64
                    type: integer
                  maxRetryDuration:
                    description: The time limit for retrying a failed job, measured
                      from time when an execution was first attempted. If specified
                      with retry_count, the job will be retried until both limits
                      are reached. The default value for max_retry_duration is zero,
                      which means retry duration is unlimited.
                    type: string
                  minBackoffDuration:
                    description: The minimum amount of time to wait before retrying
                      a job after it fails. The default value of this field is 5 seconds.
                    type: string
                  retryCount:
                    description: The number of attempts that the system will make
                      to run a job using the exponential backoff procedure described
                      by max_doublings. The default value of retry_count is zero.
                      If retry_count is zero, a job attempt will *not* be retried
                      if it fails. Instead the Cloud Scheduler system will wait for
                      the next scheduled execution time. If retry_count is set to
                      a non-zero number then Cloud Scheduler will retry failed attempts,
                      using exponential backoff, retry_count times, or until the next
                      scheduled execution time, whichever comes first. Values greater
                      than 5 and negative values are not allowed.
                    format: int64
                    type: integer
                type: object
              schedule:
                description: 'Required, except when used with UpdateJob. Describes
                  the schedule on which the job will be executed. The schedule can
                  be either of the following types: * [Crontab](http://en.wikipedia.org/wiki/Cron#Overview)
                  * English-like [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules)
                  As a general rule, execution `n + 1` of a job will not begin until
                  execution `n` has finished. Cloud Scheduler will never allow two
                  simultaneously outstanding executions. For example, this implies
                  that if the `n+1`th execution is scheduled to run at 16:00 but the
                  `n`th execution takes until 16:15, the `n+1`th execution will not
                  start until `16:15`. A scheduled start time will be delayed if the
                  previous execution has not ended when its scheduled time occurs.
                  If retry_count > 0 and a job attempt fails, the job will be tried
                  a total of retry_count times, with exponential backoff, until the
                  next scheduled start time.'
                type: string
              timeZone:
                description: Specifies the time zone to be used in interpreting schedule.
                  The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database).
                  Note that some time zones include a provision for daylight savings
                  time. The rules for daylight saving time are determined by the chosen
                  tz. For UTC use the string "utc". If a time zone is not specified,
                  the default will be in UTC (also known as GMT).
                type: string
            required:
            - location
            type: object
          status:
            properties:
              appEngineHttpTarget:
                properties:
                  appEngineRouting:
                    properties:
                      host:
                        description: 'Output only. The host that the job is sent to.
                          For more information about how App Engine requests are routed,
                          see [here](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
                          The host is constructed as: * `host = [application_domain_name]`
                          `| [service] + ''.'' + [application_domain_name]` `| [version]
                          + ''.'' + [application_domain_name]` `| [version_dot_service]+
                          ''.'' + [application_domain_name]` `| [instance] + ''.''
                          + [application_domain_name]` `| [instance_dot_service] +
                          ''.'' + [application_domain_name]` `| [instance_dot_version]
                          + ''.'' + [application_domain_name]` `| [instance_dot_version_dot_service]
                          + ''.'' + [application_domain_name]` * `application_domain_name`
                          = The domain name of the app, for example .appspot.com,
                          which is associated with the job''s project ID. * `service
                          =` service * `version =` version * `version_dot_service
                          =` version `+ ''.'' +` service * `instance =` instance *
                          `instance_dot_service =` instance `+ ''.'' +` service *
                          `instance_dot_version =` instance `+ ''.'' +` version *
                          `instance_dot_version_dot_service =` instance `+ ''.'' +`
                          version `+ ''.'' +` service If service is empty, then the
                          job will be sent to the service which is the default service
                          when the job is attempted. If version is empty, then the
                          job will be sent to the version which is the default version
                          when the job is attempted. If instance is empty, then the
                          job will be sent to an instance which is available when
                          the job is attempted. If service, version, or instance is
                          invalid, then the job will be sent to the default version
                          of the default service when the job is attempted.'
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              lastAttemptTime:
                description: Output only. The time the last job attempt started.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              scheduleTime:
                description: Output only. The next time the job is scheduled. Note
                  that this may be a retry of a previously failed attempt or the next
                  execution time according to the schedule.
                format: date-time
                type: string
              state:
                description: 'Output only. State of the job. Possible values: STATE_UNSPECIFIED,
                  ENABLED, PAUSED, DISABLED, UPDATE_FAILED'
                type: string
              status:
                description: Output only. The response from the target for the last
                  attempted execution.
                properties:
                  code:
                    description: The status code, which should be an enum value of
                      google.rpc.Code.
                    format: int64
                    type: integer
                  details:
                    description: A list of messages that carry the error details.
                      There is a common set of message types for APIs to use.
                    items:
                      properties:
                        typeUrl:
                          description: 'A URL/resource name that uniquely identifies
                            the type of the serialized protocol buffer message. This
                            string must contain at least one "/" character. The last
                            segment of the URL''s path must represent the fully qualified
                            name of the type (as in `path/google.protobuf.Duration`).
                            The name should be in a canonical form (e.g., leading
                            "." is not accepted). In practice, teams usually precompile
                            into the binary all types that they expect it to use in
                            the context of Any. However, for URLs which use the scheme
                            `http`, `https`, or no scheme, one can optionally set
                            up a type server that maps type URLs to message definitions
                            as follows: * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a google.protobuf.Type
                            value in binary format, or produce an error. * Applications
                            are allowed to cache lookup results based on the URL,
                            or have them precompiled into a binary to avoid any lookup.
                            Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.) Note: this functionality is not currently
                            available in the official protobuf release, and it is
                            not used for type URLs beginning with type.googleapis.com.
                            Schemes other than `http`, `https` (or the empty scheme)
                            might be used with implementation specific semantics.'
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          type: string
                      type: object
                    type: array
                  message:
                    description: A developer-facing error message, which should be
                      in English. Any user-facing error message should be localized
                      and sent in the google.rpc.Status.details field, or localized
                      by the client.
                    type: string
                type: object
              userUpdateTime:
                description: Output only. The creation time of the job.
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computeaddresses.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeAddress
    plural: computeaddresses
    shortNames:
    - gcpcomputeaddress
    - gcpcomputeaddresses
    singular: computeaddress
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              address:
                description: |-
                  Immutable. The static external IP address represented by this resource. Only
                  IPv4 is supported. An address may only be specified for INTERNAL
                  address types. The IP address must be inside the specified subnetwork,
                  if any. Set by the API if undefined.
                type: string
              addressType:
                description: 'Immutable. The type of address to reserve. Default value:
                  "EXTERNAL" Possible values: ["INTERNAL", "EXTERNAL"].'
                type: string
              description:
                description: Immutable. An optional description of this resource.
                type: string
              ipVersion:
                description: 'Immutable. The IP Version that will be used by this
                  address. The default value is ''IPV4''. Possible values: ["IPV4",
                  "IPV6"]. This field can only be specified for a global address.'
                type: string
              location:
                description: 'Location represents the geographical location of the
                  ComputeAddress. Specify a region name or "global" for global resources.
                  Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)'
                type: string
              networkRef:
                description: |-
                  The network in which to reserve the address. If global, the address
                  must be within the RFC1918 IP space. The network cannot be deleted
                  if there are any reserved IP ranges referring to it. This field can
                  only be used with INTERNAL type with the VPC_PEERING and
                  IPSEC_INTERCONNECT purposes.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeNetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              networkTier:
                description: |-
                  Immutable. The networking tier used for configuring this address. If this field is not
                  specified, it is assumed to be PREMIUM. Possible values: ["PREMIUM", "STANDARD"].
                type: string
              prefixLength:
                description: Immutable. The prefix length if the resource represents
                  an IP range.
                type: integer
              purpose:
                description: |-
                  Immutable. The purpose of this resource, which can be one of the following values:

                  * GCE_ENDPOINT for addresses that are used by VM instances, alias IP
                    ranges, internal load balancers, and similar resources.

                  * SHARED_LOADBALANCER_VIP for an address that can be used by multiple
                    internal load balancers.

                  * VPC_PEERING for addresses that are reserved for VPC peer networks.

                  * IPSEC_INTERCONNECT for addresses created from a private IP range
                    that are reserved for a VLAN attachment in an IPsec-encrypted Cloud
                    Interconnect configuration. These addresses are regional resources.

                  * PRIVATE_SERVICE_CONNECT for a private network address that is used
                  to configure Private Service Connect. Only global internal addresses
                  can use this purpose.

                  This should only be set when using an Internal address.
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              subnetworkRef:
                description: |-
                  The subnetwork in which to reserve the address. If an IP address is
                  specified, it must be within the subnetwork's IP range.  This field
                  can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER
                  purposes.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeSubnetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - location
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              labelFingerprint:
                description: |-
                  The fingerprint used for optimistic locking of this resource.  Used
                  internally during updates.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              selfLink:
                type: string
              users:
                description: The URLs of the resources that are using this address.
                items:
                  type: string
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computebackendservices.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeBackendService
    plural: computebackendservices
    shortNames:
    - gcpcomputebackendservice
    - gcpcomputebackendservices
    singular: computebackendservice
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              affinityCookieTtlSec:
                description: |-
                  Lifetime of cookies in seconds if session_affinity is
                  GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
                  only until the end of the browser session (or equivalent). The
                  maximum allowed value for TTL is one day.

                  When the load balancing scheme is INTERNAL, this field is not used.
                type: integer
              backend:
                description: The set of backends that serve this BackendService.
                items:
                  properties:
                    balancingMode:
                      description: |-
                        Specifies the balancing mode for this backend.

                        For global HTTP(S) or TCP/SSL load balancing, the default is
                        UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
                        and CONNECTION (for TCP/SSL).

                        See the [Backend Services Overview](https://cloud.google.com/load-balancing/docs/backend-service#balancing-mode)
                        for an explanation of load balancing modes. Default value: "UTILIZATION" Possible values: ["UTILIZATION", "RATE", "CONNECTION"].
                      type: string
                    capacityScaler:
                      description: |-
                        A multiplier applied to the group's maximum servicing capacity
                        (based on UTILIZATION, RATE or CONNECTION).

                        Default value is 1, which means the group will serve up to 100%
                        of its configured capacity (depending on balancingMode). A
                        setting of 0 means the group is completely drained, offering
                        0% of its available Capacity. Valid range is [0.0,1.0].
                      type: number
                    description:
                      description: |-
                        An optional description of this resource.
                        Provide this property when you create the resource.
                      type: string
                    failover:
                      description: |-
                        This field designates whether this is a failover backend. More
                        than one failover backend can be configured for a given RegionBackendService.
                      type: boolean
                    group:
                      description: |-
                        Reference to a ComputeInstanceGroup or ComputeNetworkEndpointGroup
                        resource. In case of instance group this defines the list of
                        instances that serve traffic. Member virtual machine instances from
                        each instance group must live in the same zone as the instance
                        group itself. No two backends in a backend service are allowed to
                        use same Instance Group resource.

                        For Network Endpoint Groups this defines list of endpoints. All
                        endpoints of Network Endpoint Group must be hosted on instances
                        located in the same zone as the Network Endpoint Group.

                        Backend services cannot mix Instance Group and Network Endpoint
                        Group backends.

                        When the 'load_balancing_scheme' is INTERNAL, only instance groups
                        are supported.
                      oneOf:
                      - required:
                        - instanceGroupRef
                      - required:
                        - networkEndpointGroupRef
                      properties:
                        instanceGroupRef:
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeInstanceGroup` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                        networkEndpointGroupRef:
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeNetworkEndpointGroup` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                      type: object
                    maxConnections:
                      description: |-
                        The max number of simultaneous connections for the group. Can
                        be used with either CONNECTION or UTILIZATION balancing modes.

                        For CONNECTION mode, either maxConnections or one
                        of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                        as appropriate for group type, must be set.
                      type: integer
                    maxConnectionsPerEndpoint:
                      description: |-
                        The max number of simultaneous connections that a single backend
                        network endpoint can handle. This is used to calculate the
                        capacity of the group. Can be used in either CONNECTION or
                        UTILIZATION balancing modes.

                        For CONNECTION mode, either
                        maxConnections or maxConnectionsPerEndpoint must be set.
                      type: integer
                    maxConnectionsPerInstance:
                      description: |-
                        The max number of simultaneous connections that a single
                        backend instance can handle. This is used to calculate the
                        capacity of the group. Can be used in either CONNECTION or
                        UTILIZATION balancing modes.

                        For CONNECTION mode, either maxConnections or
                        maxConnectionsPerInstance must be set.
                      type: integer
                    maxRate:
                      description: |-
                        The max requests per second (RPS) of the group.

                        Can be used with either RATE or UTILIZATION balancing modes,
                        but required if RATE mode. For RATE mode, either maxRate or one
                        of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
                        group type, must be set.
                      type: integer
                    maxRatePerEndpoint:
                      description: |-
                        The max requests per second (RPS) that a single backend network
                        endpoint can handle. This is used to calculate the capacity of
                        the group. Can be used in either balancing mode. For RATE mode,
                        either maxRate or maxRatePerEndpoint must be set.
                      type: number
                    maxRatePerInstance:
                      description: |-
                        The max requests per second (RPS) that a single backend
                        instance can handle. This is used to calculate the capacity of
                        the group. Can be used in either balancing mode. For RATE mode,
                        either maxRate or maxRatePerInstance must be set.
                      type: number
                    maxUtilization:
                      description: |-
                        Used when balancingMode is UTILIZATION. This ratio defines the
                        CPU utilization target for the group. Valid range is [0.0, 1.0].
                      type: number
                  required:
                  - group
                  type: object
                type: array
              cdnPolicy:
                description: Cloud CDN configuration for this BackendService.
                properties:
                  cacheKeyPolicy:
                    description: The CacheKeyPolicy for this CdnPolicy.
                    properties:
                      includeHost:
                        description: If true requests to different hosts will be cached
                          separately.
                        type: boolean
                      includeHttpHeaders:
                        description: |-
                          Allows HTTP request headers (by name) to be used in the
                          cache key.
                        items:
                          type: string
                        type: array
                      includeNamedCookies:
                        description: Names of cookies to include in cache keys.
                        items:
                          type: string
                        type: array
                      includeProtocol:
                        description: If true, http and https requests will be cached
                          separately.
                        type: boolean
                      includeQueryString:
                        description: |-
                          If true, include query string parameters in the cache key
                          according to query_string_whitelist and
                          query_string_blacklist. If neither is set, the entire query
                          string will be included.

                          If false, the query string will be excluded from the cache
                          key entirely.
                        type: boolean
                      queryStringBlacklist:
                        description: |-
                          Names of query string parameters to exclude in cache keys.

                          All other parameters will be included. Either specify
                          query_string_whitelist or query_string_blacklist, not both.
                          '&' and '=' will be percent encoded and not treated as
                          delimiters.
                        items:
                          type: string
                        type: array
                      queryStringWhitelist:
                        description: |-
                          Names of query string parameters to include in cache keys.

                          All other parameters will be excluded. Either specify
                          query_string_whitelist or query_string_blacklist, not both.
                          '&' and '=' will be percent encoded and not treated as
                          delimiters.
                        items:
                          type: string
                        type: array
                    type: object
                  cacheMode:
                    description: |-
                      Specifies the cache setting for all responses from this backend.
                      The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC Possible values: ["USE_ORIGIN_HEADERS", "FORCE_CACHE_ALL", "CACHE_ALL_STATIC"].
                    type: string
                  clientTtl:
                    description: Specifies the maximum allowed TTL for cached content
                      served by this origin.
                    type: integer
                  defaultTtl:
                    description: |-
                      Specifies the default TTL for cached content served by this origin for responses
                      that do not have an existing valid TTL (max-age or s-max-age).
                    type: integer
                  maxTtl:
                    description: Specifies the maximum allowed TTL for cached content
                      served by this origin.
                    type: integer
                  negativeCaching:
                    description: Negative caching allows per-status code TTLs to be
                      set, in order to apply fine-grained caching for common errors
                      or redirects.
                    type: boolean
                  negativeCachingPolicy:
                    description: |-
                      Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                      Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                    items:
                      properties:
                        code:
                          description: |-
                            The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                            can be specified as values, and you cannot specify a status code more than once.
                          type: integer
                        ttl:
                          description: |-
                            The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                            (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                          type: integer
                      type: object
                    type: array
                  serveWhileStale:
                    description: Serve existing content from the cache (if available)
                      when revalidating content with the origin, or when an error
                      is encountered when refreshing the cache.
                    type: integer
                  signedUrlCacheMaxAgeSec:
                    description: |-
                      Maximum number of seconds the response to a signed URL request
                      will be considered fresh, defaults to 1hr (3600s). After this
                      time period, the response will be revalidated before
                      being served.

                      When serving responses to signed URL requests, Cloud CDN will
                      internally behave as though all responses from this backend had a
                      "Cache-Control: public, max-age=[TTL]" header, regardless of any
                      existing Cache-Control header. The actual headers served in
                      responses will not be altered.
                    type: integer
                type: object
              circuitBreakers:
                description: |-
                  Settings controlling the volume of connections to a backend service. This field
                  is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
                properties:
                  connectTimeout:
                    description: The timeout for new network connections to hosts.
                    properties:
                      nanos:
                        description: |-
                          Span of time that's a fraction of a second at nanosecond
                          resolution. Durations less than one second are represented
                          with a 0 seconds field and a positive nanos field. Must
                          be from 0 to 999,999,999 inclusive.
                        type: integer
                      seconds:
                        description: |-
                          Span of time at a resolution of a second.
                          Must be from 0 to 315,576,000,000 inclusive.
                        type: integer
                    required:
                    - seconds
                    type: object
                  maxConnections:
                    description: |-
                      The maximum number of connections to the backend cluster.
                      Defaults to 1024.
                    type: integer
                  maxPendingRequests:
                    description: |-
                      The maximum number of pending requests to the backend cluster.
                      Defaults to 1024.
                    type: integer
                  maxRequests:
                    description: |-
                      The maximum number of parallel requests to the backend cluster.
                      Defaults to 1024.
                    type: integer
                  maxRequestsPerConnection:
                    description: |-
                      Maximum requests for a single backend connection. This parameter
                      is respected by both the HTTP/1.1 and HTTP/2 implementations. If
                      not specified, there is no limit. Setting this parameter to 1
                      will effectively disable keep alive.
                    type: integer
                  maxRetries:
                    description: |-
                      The maximum number of parallel retries to the backend cluster.
                      Defaults to 3.
                    type: integer
                type: object
              compressionMode:
                description: 'Compress text responses using Brotli or gzip compression,
                  based on the client''s Accept-Encoding header. Possible values:
                  ["AUTOMATIC", "DISABLED"].'
                type: string
              connectionDrainingTimeoutSec:
                description: |-
                  Time for which instance will be drained (not accept new
                  connections, but still work to finish started).
                type: integer
              connectionTrackingPolicy:
                description: |-
                  Connection Tracking configuration for this BackendService.
                  This is available only for Layer 4 Internal Load Balancing and
                  Network Load Balancing.
                properties:
                  connectionPersistenceOnUnhealthyBackends:
                    description: |-
                      Specifies connection persistence when backends are unhealthy.

                      If set to 'DEFAULT_FOR_PROTOCOL', the existing connections persist on
                      unhealthy backends only for connection-oriented protocols (TCP and SCTP)
                      and only if the Tracking Mode is PER_CONNECTION (default tracking mode)
                      or the Session Affinity is configured for 5-tuple. They do not persist
                      for UDP.

                      If set to 'NEVER_PERSIST', after a backend becomes unhealthy, the existing
                      connections on the unhealthy backend are never persisted on the unhealthy
                      backend. They are always diverted to newly selected healthy backends
                      (unless all backends are unhealthy).

                      If set to 'ALWAYS_PERSIST', existing connections always persist on
                      unhealthy backends regardless of protocol and session affinity. It is
                      generally not recommended to use this mode overriding the default. Default value: "DEFAULT_FOR_PROTOCOL" Possible values: ["DEFAULT_FOR_PROTOCOL", "NEVER_PERSIST", "ALWAYS_PERSIST"].
                    type: string
                  idleTimeoutSec:
                    description: |-
                      Specifies how long to keep a Connection Tracking entry while there is
                      no matching traffic (in seconds).

                      For L4 ILB the minimum(default) is 10 minutes and maximum is 16 hours.

                      For NLB the minimum(default) is 60 seconds and the maximum is 16 hours.
                    type: integer
                  trackingMode:
                    description: |-
                      Specifies the key used for connection tracking. There are two options:
                      'PER_CONNECTION': The Connection Tracking is performed as per the
                      Connection Key (default Hash Method) for the specific protocol.

                      'PER_SESSION': The Connection Tracking is performed as per the
                      configured Session Affinity. It matches the configured Session Affinity. Default value: "PER_CONNECTION" Possible values: ["PER_CONNECTION", "PER_SESSION"].
                    type: string
                type: object
              consistentHash:
                description: |-
                  Consistent Hash-based load balancing can be used to provide soft session
                  affinity based on HTTP headers, cookies or other properties. This load balancing
                  policy is applicable only for HTTP connections. The affinity to a particular
                  destination host will be lost when one or more hosts are added/removed from the
                  destination service. This field specifies parameters that control consistent
                  hashing. This field only applies if the load_balancing_scheme is set to
                  INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is
                  set to MAGLEV or RING_HASH.
                properties:
                  httpCookie:
                    description: |-
                      Hash is based on HTTP Cookie. This field describes a HTTP cookie
                      that will be used as the hash key for the consistent hash load
                      balancer. If the cookie is not present, it will be generated.
                      This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
                    properties:
                      name:
                        description: Name of the cookie.
                        type: string
                      path:
                        description: Path to set for the cookie.
                        type: string
                      ttl:
                        description: Lifetime of the cookie.
                        properties:
                          nanos:
                            description: |-
                              Span of time that's a fraction of a second at nanosecond
                              resolution. Durations less than one second are represented
                              with a 0 seconds field and a positive nanos field. Must
                              be from 0 to 999,999,999 inclusive.
                            type: integer
                          seconds:
                            description: |-
                              Span of time at a resolution of a second.
                              Must be from 0 to 315,576,000,000 inclusive.
                            type: integer
                        required:
                        - seconds
                        type: object
                    type: object
                  httpHeaderName:
                    description: |-
                      The hash based on the value of the specified header field.
                      This field is applicable if the sessionAffinity is set to HEADER_FIELD.
                    type: string
                  minimumRingSize:
                    description: |-
                      The minimum number of virtual nodes to use for the hash ring.
                      Larger ring sizes result in more granular load
                      distributions. If the number of hosts in the load balancing pool
                      is larger than the ring size, each host will be assigned a single
                      virtual node.
                      Defaults to 1024.
                    type: integer
                type: object
              customRequestHeaders:
                description: |-
                  Headers that the HTTP/S load balancer should add to proxied
                  requests.
                items:
                  type: string
                type: array
              customResponseHeaders:
                description: |-
                  Headers that the HTTP/S load balancer should add to proxied
                  responses.
                items:
                  type: string
                type: array
              description:
                description: An optional description of this resource.
                type: string
              edgeSecurityPolicyRef:
                description: |-
                  The resource URL for the edge security policy associated with this
                  backend service.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeSecurityPolicy`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              enableCdn:
                description: If true, enable Cloud CDN for this BackendService.
                type: boolean
              failoverPolicy:
                description: Policy for failovers.
                properties:
                  disableConnectionDrainOnFailover:
                    description: |-
                      On failover or failback, this field indicates whether connection drain
                      will be honored. Setting this to true has the following effect: connections
                      to the old active pool are not drained. Connections to the new active pool
                      use the timeout of 10 min (currently fixed). Setting to false has the
                      following effect: both old and new connections will have a drain timeout
                      of 10 min.
                      This can be set to true only if the protocol is TCP.
                      The default is false.
                    type: boolean
                  dropTrafficIfUnhealthy:
                    description: |-
                      This option is used only when no healthy VMs are detected in the primary
                      and backup instance groups. When set to true, traffic is dropped. When
                      set to false, new connections are sent across all VMs in the primary group.
                      The default is false.
                    type: boolean
                  failoverRatio:
                    description: |-
                      The value of the field must be in [0, 1]. If the ratio of the healthy
                      VMs in the primary backend is at or below this number, traffic arriving
                      at the load-balanced IP will be directed to the failover backend.
                      In case where 'failoverRatio' is not set or all the VMs in the backup
                      backend are unhealthy, the traffic will be directed back to the primary
                      backend in the "force" mode, where traffic will be spread to the healthy
                      VMs with the best effort, or to all VMs when no VM is healthy.
                      This field is only used with l4 load balancing.
                    type: number
                type: object
              healthChecks:
                items:
                  description: |-
                    The health check resources for health checking this
                    ComputeBackendService. Currently at most one health check can be
                    specified, and a health check is required.
                  oneOf:
                  - required:
                    - healthCheckRef
                  - required:
                    - httpHealthCheckRef
                  properties:
                    healthCheckRef:
                      oneOf:
                      - not:
                          required:
                          - external
                        required:
                        - name
                      - not:
                          anyOf:
                          - required:
                            - name
                          - required:
                            - namespace
                        required:
                        - external
                      properties:
                        external:
                          description: 'Allowed value: The `selfLink` field of a `ComputeHealthCheck`
                            resource.'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                      type: object
                    httpHealthCheckRef:
                      oneOf:
                      - not:
                          required:
                          - external
                        required:
                        - name
                      - not:
                          anyOf:
                          - required:
                            - name
                          - required:
                            - namespace
                        required:
                        - external
                      properties:
                        external:
                          description: 'Allowed value: The `selfLink` field of a `ComputeHTTPHealthCheck`
                            resource.'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                      type: object
                  type: object
                type: array
              iap:
                description: Settings for enabling Cloud Identity Aware Proxy.
                oneOf:
                - required:
                  - oauth2ClientId
                - required:
                  - oauth2ClientIdRef
                properties:
                  oauth2ClientId:
                    description: DEPRECATED. Although this field is still available,
                      there is limited support. We recommend that you use `spec.iap.oauth2ClientIdRef`
                      instead.
                    type: string
                  oauth2ClientIdRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      OAuth2 Client ID for IAP.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of an `IAPIdentityAwareProxyClient`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  oauth2ClientSecret:
                    description: OAuth2 Client Secret for IAP.
                    oneOf:
                    - not:
                        required:
                        - valueFrom
                      required:
                      - value
                    - not:
                        required:
                        - value
                      required:
                      - valueFrom
                    properties:
                      value:
                        description: Value of the field. Cannot be used if 'valueFrom'
                          is specified.
                        type: string
                      valueFrom:
                        description: Source for the field's value. Cannot be used
                          if 'value' is specified.
                        properties:
                          secretKeyRef:
                            description: Reference to a value with the given key in
                              the given Secret in the resource's namespace.
                            properties:
                              key:
                                description: Key that identifies the value to be extracted.
                                type: string
                              name:
                                description: Name of the Secret to extract a value
                                  from.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        type: object
                    type: object
                  oauth2ClientSecretSha256:
                    description: OAuth2 Client Secret SHA-256 for IAP.
                    type: string
                type: object
              loadBalancingScheme:
                description: |-
                  Immutable. Indicates whether the backend service will be used with internal or
                  external load balancing. A backend service created for one type of
                  load balancing cannot be used with the other. For more information, refer to
                  [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values: ["EXTERNAL", "INTERNAL_SELF_MANAGED", "EXTERNAL_MANAGED"].
                type: string
              localityLbPolicies:
                description: |-
                  A list of locality load balancing policies to be used in order of
                  preference. Either the policy or the customPolicy field should be set.
                  Overrides any value set in the localityLbPolicy field.

                  localityLbPolicies is only supported when the BackendService is referenced
                  by a URL Map that is referenced by a target gRPC proxy that has the
                  validateForProxyless field set to true.
                items:
                  properties:
                    customPolicy:
                      description: |-
                        The configuration for a custom policy implemented by the user and
                        deployed with the client.
                      properties:
                        data:
                          description: |-
                            An optional, arbitrary JSON object with configuration data, understood
                            by a locally installed custom policy implementation.
                          type: string
                        name:
                          description: |-
                            Identifies the custom policy.

                            The value should match the type the custom implementation is registered
                            with on the gRPC clients. It should follow protocol buffer
                            message naming conventions and include the full path (e.g.
                            myorg.CustomLbPolicy). The maximum length is 256 characters.

                            Note that specifying the same custom policy more than once for a
                            backend is not a valid configuration and will be rejected.
                          type: string
                      required:
                      - name
                      type: object
                    policy:
                      description: The configuration for a built-in load balancing
                        policy.
                      properties:
                        name:
                          description: |-
                            The name of a locality load balancer policy to be used. The value
                            should be one of the predefined ones as supported by localityLbPolicy,
                            although at the moment only ROUND_ROBIN is supported.

                            This field should only be populated when the customPolicy field is not
                            used.

                            Note that specifying the same policy more than once for a backend is
                            not a valid configuration and will be rejected.

                            The possible values are:

                            * 'ROUND_ROBIN': This is a simple policy in which each healthy backend
                                            is selected in round robin order.

                            * 'LEAST_REQUEST': An O(1) algorithm which selects two random healthy
                                              hosts and picks the host which has fewer active requests.

                            * 'RING_HASH': The ring/modulo hash load balancer implements consistent
                                          hashing to backends. The algorithm has the property that the
                                          addition/removal of a host from a set of N hosts only affects
                                          1/N of the requests.

                            * 'RANDOM': The load balancer selects a random healthy host.

                            * 'ORIGINAL_DESTINATION': Backend host is selected based on the client
                                                      connection metadata, i.e., connections are opened
                                                      to the same address as the destination address of
                                                      the incoming connection before the connection
                                                      was redirected to the load balancer.

                            * 'MAGLEV': used as a drop in replacement for the ring hash load balancer.
                                        Maglev is not as stable as ring hash but has faster table lookup
                                        build times and host selection times. For more information about
                                        Maglev, refer to https://ai.google/research/pubs/pub44824 Possible values: ["ROUND_ROBIN", "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV"].
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                type: array
              localityLbPolicy:
                description: |-
                  The load balancing algorithm used within the scope of the locality.
                  The possible values are:

                  * 'ROUND_ROBIN': This is a simple policy in which each healthy backend
                                   is selected in round robin order.

                  * 'LEAST_REQUEST': An O(1) algorithm which selects two random healthy
                                     hosts and picks the host which has fewer active requests.

                  * 'RING_HASH': The ring/modulo hash load balancer implements consistent
                                 hashing to backends. The algorithm has the property that the
                                 addition/removal of a host from a set of N hosts only affects
                                 1/N of the requests.

                  * 'RANDOM': The load balancer selects a random healthy host.

                  * 'ORIGINAL_DESTINATION': Backend host is selected based on the client
                                            connection metadata, i.e., connections are opened
                                            to the same address as the destination address of
                                            the incoming connection before the connection
                                            was redirected to the load balancer.

                  * 'MAGLEV': used as a drop in replacement for the ring hash load balancer.
                              Maglev is not as stable as ring hash but has faster table lookup
                              build times and host selection times. For more information about
                              Maglev, refer to https://ai.google/research/pubs/pub44824


                  This field is applicable to either:

                  * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2,
                    and loadBalancingScheme set to INTERNAL_MANAGED.
                  * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.


                  If session_affinity is not NONE, and this field is not set to MAGLEV or RING_HASH,
                  session affinity settings will not take effect.

                  Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced
                  by a URL map that is bound to target gRPC proxy that has validate_for_proxyless
                  field set to true. Possible values: ["ROUND_ROBIN", "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV"].
                type: string
              location:
                description: 'Location represents the geographical location of the
                  ComputeBackendService. Specify a region name or "global" for global
                  resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)'
                type: string
              logConfig:
                description: |-
                  This field denotes the logging options for the load balancer traffic served by this backend service.
                  If logging is enabled, logs will be exported to Stackdriver.
                properties:
                  enable:
                    description: Whether to enable logging for the load balancer traffic
                      served by this backend service.
                    type: boolean
                  sampleRate:
                    description: |-
                      This field can only be specified if logging is enabled for this backend service. The value of
                      the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
                      where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
                      The default value is 1.0.
                    type: number
                type: object
              networkRef:
                description: |-
                  The network to which this backend service belongs.  This field can
                  only be specified when the load balancing scheme is set to
                  INTERNAL.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeNetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              outlierDetection:
                description: |-
                  Settings controlling eviction of unhealthy hosts from the load balancing pool.
                  This field is applicable only when the load_balancing_scheme is set
                  to INTERNAL_SELF_MANAGED.
                properties:
                  baseEjectionTime:
                    description: |-
                      The base time that a host is ejected for. The real time is equal to the base
                      time multiplied by the number of times the host has been ejected. Defaults to
                      30000ms or 30s.
                    properties:
                      nanos:
                        description: |-
                          Span of time that's a fraction of a second at nanosecond resolution. Durations
                          less than one second are represented with a 0 'seconds' field and a positive
                          'nanos' field. Must be from 0 to 999,999,999 inclusive.
                        type: integer
                      seconds:
                        description: |-
                          Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                          inclusive.
                        type: integer
                    required:
                    - seconds
                    type: object
                  consecutiveErrors:
                    description: |-
                      Number of errors before a host is ejected from the connection pool. When the
                      backend host is accessed over HTTP, a 5xx return code qualifies as an error.
                      Defaults to 5.
                    type: integer
                  consecutiveGatewayFailure:
                    description: |-
                      The number of consecutive gateway failures (502, 503, 504 status or connection
                      errors that are mapped to one of those status codes) before a consecutive
                      gateway failure ejection occurs. Defaults to 5.
                    type: integer
                  enforcingConsecutiveErrors:
                    description: |-
                      The percentage chance that a host will be actually ejected when an outlier
                      status is detected through consecutive 5xx. This setting can be used to disable
                      ejection or to ramp it up slowly. Defaults to 100.
                    type: integer
                  enforcingConsecutiveGatewayFailure:
                    description: |-
                      The percentage chance that a host will be actually ejected when an outlier
                      status is detected through consecutive gateway failures. This setting can be
                      used to disable ejection or to ramp it up slowly. Defaults to 0.
                    type: integer
                  enforcingSuccessRate:
                    description: |-
                      The percentage chance that a host will be actually ejected when an outlier
                      status is detected through success rate statistics. This setting can be used to
                      disable ejection or to ramp it up slowly. Defaults to 100.
                    type: integer
                  interval:
                    description: |-
                      Time interval between ejection sweep analysis. This can result in both new
                      ejections as well as hosts being returned to service. Defaults to 10 seconds.
                    properties:
                      nanos:
                        description: |-
                          Span of time that's a fraction of a second at nanosecond resolution. Durations
                          less than one second are represented with a 0 'seconds' field and a positive
                          'nanos' field. Must be from 0 to 999,999,999 inclusive.
                        type: integer
                      seconds:
                        description: |-
                          Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                          inclusive.
                        type: integer
                    required:
                    - seconds
                    type: object
                  maxEjectionPercent:
                    description: |-
                      Maximum percentage of hosts in the load balancing pool for the backend service
                      that can be ejected. Defaults to 10%.
                    type: integer
                  successRateMinimumHosts:
                    description: |-
                      The number of hosts in a cluster that must have enough request volume to detect
                      success rate outliers. If the number of hosts is less than this setting, outlier
                      detection via success rate statistics is not performed for any host in the
                      cluster. Defaults to 5.
                    type: integer
                  successRateRequestVolume:
                    description: |-
                      The minimum number of total requests that must be collected in one interval (as
                      defined by the interval duration above) to include this host in success rate
                      based outlier detection. If the volume is lower than this setting, outlier
                      detection via success rate statistics is not performed for that host. Defaults
                      to 100.
                    type: integer
                  successRateStdevFactor:
                    description: |-
                      This factor is used to determine the ejection threshold for success rate outlier
                      ejection. The ejection threshold is the difference between the mean success
                      rate, and the product of this factor and the standard deviation of the mean
                      success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
                      by a thousand to get a double. That is, if the desired factor is 1.9, the
                      runtime value should be 1900. Defaults to 1900.
                    type: integer
                type: object
              portName:
                description: |-
                  Name of backend port. The same name should appear in the instance
                  groups referenced by this service. Required when the load balancing
                  scheme is EXTERNAL.
                type: string
              protocol:
                description: |-
                  The protocol this BackendService uses to communicate with backends.
                  The default is HTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer
                  types and may result in errors if used with the GA API. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC"].
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              securityPolicyRef:
                description: The security policy associated with this backend service.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeSecurityPolicy`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              securitySettings:
                description: |-
                  The security settings that apply to this backend service. This field is applicable to either
                  a regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and
                  load_balancing_scheme set to INTERNAL_MANAGED; or a global backend service with the
                  load_balancing_scheme set to INTERNAL_SELF_MANAGED.
                properties:
                  clientTLSPolicyRef:
                    description: |-
                      ClientTlsPolicy is a resource that specifies how a client should
                      authenticate connections to backends of a service. This resource itself
                      does not affect configuration unless it is attached to a backend
                      service resource. *ConfigConnector only supports `external`
                      references for this field.*
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `NetworkSecurityClientTLSPolicy`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  subjectAltNames:
                    description: |-
                      A list of alternate names to verify the subject identity in the certificate.
                      If specified, the client will verify that the server certificate's subject
                      alt name matches one of the specified values.
                    items:
                      type: string
                    type: array
                required:
                - clientTLSPolicyRef
                - subjectAltNames
                type: object
              sessionAffinity:
                description: |-
                  Type of session affinity to use. The default is NONE. Session affinity is
                  not applicable if the protocol is UDP. Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"].
                type: string
              subsetting:
                description: Subsetting configuration for this BackendService. Currently
                  this is applicable only for Internal TCP/UDP load balancing and
                  Internal HTTP(S) load balancing.
                properties:
                  policy:
                    description: 'The algorithm used for subsetting. Possible values:
                      ["CONSISTENT_HASH_SUBSETTING"].'
                    type: string
                required:
                - policy
                type: object
              timeoutSec:
                description: |-
                  How many seconds to wait for the backend before considering it a
                  failed request. Default is 30 seconds. Valid range is [1, 86400].
                type: integer
            required:
            - location
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              fingerprint:
                description: |-
                  Fingerprint of this resource. A hash of the contents stored in this
                  object. This field is used in optimistic locking.
                type: string
              generatedId:
                description: The unique identifier for the resource. This identifier
                  is defined by the server.
                type: integer
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              selfLink:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computeforwardingrules.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeForwardingRule
    plural: computeforwardingrules
    shortNames:
    - gcpcomputeforwardingrule
    - gcpcomputeforwardingrules
    singular: computeforwardingrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allPorts:
                description: Immutable. This field is used along with the `backend_service`
                  field for internal load balancing or with the `target` field for
                  internal TargetInstance. This field cannot be used with `port` or
                  `portRange` fields. When the load balancing scheme is `INTERNAL`
                  and protocol is TCP/UDP, specify this field to allow packets addressed
                  to any ports will be forwarded to the backends configured with this
                  forwarding rule.
                type: boolean
              allowGlobalAccess:
                description: This field is used along with the `backend_service` field
                  for internal load balancing or with the `target` field for internal
                  TargetInstance. If the field is set to `TRUE`, clients can access
                  ILB from all regions. Otherwise only allows access from clients
                  in the same region as the internal load balancer.
                type: boolean
              backendServiceRef:
                description: |-
                  A ComputeBackendService to receive the matched traffic. This is
                  used only for internal load balancing.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeBackendService`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              description:
                description: Immutable. An optional description of this resource.
                  Provide this property when you create the resource.
                type: string
              ipAddress:
                description: |-
                  The IP address that this forwarding rule is serving on behalf of.

                  Addresses are restricted based on the forwarding rule's load
                  balancing scheme (EXTERNAL or INTERNAL) and scope (global or
                  regional).

                  When the load balancing scheme is EXTERNAL, for global forwarding
                  rules, the address must be a global IP, and for regional forwarding
                  rules, the address must live in the same region as the forwarding
                  rule. If this field is empty, an ephemeral IPv4 address from the
                  same scope (global or regional) will be assigned. A regional
                  forwarding rule supports IPv4 only. A global forwarding rule
                  supports either IPv4 or IPv6.

                  When the load balancing scheme is INTERNAL, this can only be an RFC
                  1918 IP address belonging to the network/subnet configured for the
                  forwarding rule. By default, if this field is empty, an ephemeral
                  internal IP address will be automatically allocated from the IP
                  range of the subnet or network configured for this forwarding rule.
                oneOf:
                - required:
                  - addressRef
                - required:
                  - ip
                properties:
                  addressRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `address` field of a `ComputeAddress`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  ip:
                    type: string
                type: object
              ipProtocol:
                description: Immutable. The IP protocol to which this rule applies.
                  For protocol forwarding, valid options are `TCP`, `UDP`, `ESP`,
                  `AH`, `SCTP` or `ICMP`. For Internal TCP/UDP Load Balancing, the
                  load balancing scheme is `INTERNAL`, and one of `TCP` or `UDP` are
                  valid. For Traffic Director, the load balancing scheme is `INTERNAL_SELF_MANAGED`,
                  and only `TCP`is valid. For Internal HTTP(S) Load Balancing, the
                  load balancing scheme is `INTERNAL_MANAGED`, and only `TCP` is valid.
                  For HTTP(S), SSL Proxy, and TCP Proxy Load Balancing, the load balancing
                  scheme is `EXTERNAL` and only `TCP` is valid. For Network TCP/UDP
                  Load Balancing, the load balancing scheme is `EXTERNAL`, and one
                  of `TCP` or `UDP` is valid.
                type: string
              ipVersion:
                description: 'Immutable. The IP Version that will be used by this
                  forwarding rule. Valid options are `IPV4` or `IPV6`. This can only
                  be specified for an external global forwarding rule. Possible values:
                  UNSPECIFIED_VERSION, IPV4, IPV6.'
                type: string
              isMirroringCollector:
                description: Immutable. Indicates whether or not this load balancer
                  can be used as a collector for packet mirroring. To prevent mirroring
                  loops, instances behind this load balancer will not have their traffic
                  mirrored even if a `PacketMirroring` rule applies to them. This
                  can only be set to true for load balancers that have their `loadBalancingScheme`
                  set to `INTERNAL`.
                type: boolean
              loadBalancingScheme:
                description: "Immutable. Specifies the forwarding rule type.\n\n*
                  \  `EXTERNAL` is used for:\n    *   Classic Cloud VPN gateways\n
                  \   *   Protocol forwarding to VMs from an external IP address\n
                  \   *   The following load balancers: HTTP(S), SSL Proxy, TCP Proxy,
                  and Network TCP/UDP\n*   `INTERNAL` is used for:\n    *   Protocol
                  forwarding to VMs from an internal IP address\n    *   Internal
                  TCP/UDP load balancers\n*   `INTERNAL_MANAGED` is used for:\n    *
                  \  Internal HTTP(S) load balancers\n*   `INTERNAL_SELF_MANAGED`
                  is used for:\n    *   Traffic Director\n*   `EXTERNAL_MANAGED` is
                  used for:\n    *   Global external HTTP(S) load balancers \n\nFor
                  more information about forwarding rules, refer to [Forwarding rule
                  concepts](/load-balancing/docs/forwarding-rule-concepts). Possible
                  values: INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED,
                  EXTERNAL, EXTERNAL_MANAGED."
                type: string
              location:
                description: 'Location represents the geographical location of the
                  ComputeForwardingRule. Specify a region name or "global" for global
                  resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)'
                type: string
              metadataFilters:
                description: |-
                  Immutable. Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set of [xDS](https://github.com/envoyproxy/data-plane-api/blob/master/XDS_PROTOCOL.md) compliant clients. In their xDS requests to Loadbalancer, xDS clients present [node metadata](https://github.com/envoyproxy/data-plane-api/search?q=%22message+Node%22+in%3A%2Fenvoy%2Fapi%2Fv2%2Fcore%2Fbase.proto&). If a match takes place, the relevant configuration is made available to those proxies. Otherwise, all the resources (e.g. `TargetHttpProxy`, `UrlMap`) referenced by the `ForwardingRule` will not be visible to those proxies.

                  For each `metadataFilter` in this list, if its `filterMatchCriteria` is set to MATCH_ANY, at least one of the `filterLabel`s must match the corresponding label provided in the metadata. If its `filterMatchCriteria` is set to MATCH_ALL, then all of its `filterLabel`s must match with corresponding labels provided in the metadata.

                  `metadataFilters` specified here will be applifed before those specified in the `UrlMap` that this `ForwardingRule` references.

                  `metadataFilters` only applies to Loadbalancers that have their loadBalancingScheme set to `INTERNAL_SELF_MANAGED`.
                items:
                  properties:
                    filterLabels:
                      description: |-
                        Immutable. The list of label value pairs that must match labels in the provided metadata based on `filterMatchCriteria`

                        This list must not be empty and can have at the most 64 entries.
                      items:
                        properties:
                          name:
                            description: |-
                              Immutable. Name of metadata label.

                              The name can have a maximum length of 1024 characters and must be at least 1 character long.
                            type: string
                          value:
                            description: |-
                              Immutable. The value of the label must match the specified value.

                              value can have a maximum length of 1024 characters.
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    filterMatchCriteria:
                      description: |-
                        Immutable. Specifies how individual `filterLabel` matches within the list of `filterLabel`s contribute towards the overall `metadataFilter` match.

                        Supported values are:

                        *   MATCH_ANY: At least one of the `filterLabels` must have a matching label in the provided metadata.
                        *   MATCH_ALL: All `filterLabels` must have matching labels in the provided metadata. Possible values: NOT_SET, MATCH_ALL, MATCH_ANY.
                      type: string
                  required:
                  - filterLabels
                  - filterMatchCriteria
                  type: object
                type: array
              networkRef:
                description: |-
                  This field is not used for external load balancing. For internal
                  load balancing, this field identifies the network that the load
                  balanced IP should belong to for this forwarding rule. If this
                  field is not specified, the default network will be used.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeNetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              networkTier:
                description: 'Immutable. This signifies the networking tier used for
                  configuring this load balancer and can only take the following values:
                  `PREMIUM`, `STANDARD`. For regional ForwardingRule, the valid values
                  are `PREMIUM` and `STANDARD`. For GlobalForwardingRule, the valid
                  value is `PREMIUM`. If this field is not specified, it is assumed
                  to be `PREMIUM`. If `IPAddress` is specified, this value must be
                  equal to the networkTier of the Address.'
                type: string
              portRange:
                description: |-
                  Immutable. When the load balancing scheme is `EXTERNAL`, `INTERNAL_SELF_MANAGED` and `INTERNAL_MANAGED`, you can specify a `port_range`. Use with a forwarding rule that points to a target proxy or a target pool. Do not use with a forwarding rule that points to a backend service. This field is used along with the `target` field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance. Applicable only when `IPProtocol` is `TCP`, `UDP`, or `SCTP`, only packets addressed to ports in the specified range will be forwarded to `target`. Forwarding rules with the same `[IPAddress, IPProtocol]` pair must have disjoint port ranges. Some types of forwarding target have constraints on the acceptable ports:

                  *   TargetHttpProxy: 80, 8080
                  *   TargetHttpsProxy: 443
                  *   TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222
                  *   TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222
                  *   TargetVpnGateway: 500, 4500

                  @pattern: d+(?:-d+)?.
                type: string
              ports:
                description: 'Immutable. This field is used along with the `backend_service`
                  field for internal load balancing. When the load balancing scheme
                  is `INTERNAL`, a list of ports can be configured, for example, [''80''],
                  [''8000'',''9000'']. Only packets addressed to these ports are forwarded
                  to the backends configured with the forwarding rule. If the forwarding
                  rule''s loadBalancingScheme is INTERNAL, you can specify ports in
                  one of the following ways: * A list of up to five ports, which can
                  be non-contiguous * Keyword `ALL`, which causes the forwarding rule
                  to forward traffic on any port of the forwarding rule''s protocol.
                  @pattern: d+(?:-d+)? For more information, refer to [Port specifications](/load-balancing/docs/forwarding-rule-concepts#port_specifications).'
                items:
                  type: string
                type: array
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              serviceDirectoryRegistrations:
                description: Immutable. Service Directory resources to register this
                  forwarding rule with. Currently, only supports a single Service
                  Directory resource.
                items:
                  properties:
                    namespace:
                      description: Immutable. Service Directory namespace to register
                        the forwarding rule under.
                      type: string
                    service:
                      description: Immutable. Service Directory service to register
                        the forwarding rule under.
                      type: string
                  type: object
                type: array
              serviceLabel:
                description: Immutable. An optional prefix to the service name for
                  this Forwarding Rule. If specified, the prefix is the first label
                  of the fully qualified service name. The label must be 1-63 characters
                  long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
                  Specifically, the label must be 1-63 characters long and match the
                  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                  first character must be a lowercase letter, and all following characters
                  must be a dash, lowercase letter, or digit, except the last character,
                  which cannot be a dash. This field is only used for internal load
                  balancing.
                type: string
              subnetworkRef:
                description: |-
                  The subnetwork that the load balanced IP should belong to for this
                  forwarding rule. This field is only used for internal load
                  balancing.

                  If the network specified is in auto subnet mode, this field is
                  optional. However, if the network is in custom subnet mode, a
                  subnetwork must be specified.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `ComputeSubnetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              target:
                description: |-
                  The target resource to receive the matched traffic. The forwarded
                  traffic must be of a type appropriate to the target object. For
                  INTERNAL_SELF_MANAGED load balancing, only HTTP and HTTPS targets
                  are valid.
                oneOf:
                - required:
                  - targetGRPCProxyRef
                - required:
                  - targetHTTPProxyRef
                - required:
                  - targetHTTPSProxyRef
                - required:
                  - targetSSLProxyRef
                - required:
                  - targetTCPProxyRef
                - required:
                  - targetVPNGatewayRef
                properties:
                  targetGRPCProxyRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeTargetGRPCProxy`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  targetHTTPProxyRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeTargetHTTPProxy`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  targetHTTPSProxyRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeTargetHTTPSProxy`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  targetSSLProxyRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeTargetSSLProxy`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  targetTCPProxyRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeTargetTCPProxy`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  targetVPNGatewayRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeTargetVPNGateway`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                type: object
            required:
            - location
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTimestamp:
                description: '[Output Only] Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                  text format.'
                type: string
              labelFingerprint:
                description: Used internally during label updates.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              pscConnectionId:
                description: The PSC connection id of the PSC Forwarding Rule.
                type: string
              pscConnectionStatus:
                description: 'The PSC connection status of the PSC Forwarding Rule.
                  Possible values: STATUS_UNSPECIFIED, PENDING, ACCEPTED, REJECTED,
                  CLOSED.'
                type: string
              selfLink:
                description: '[Output Only] Server-defined URL for the resource.'
                type: string
              serviceName:
                description: '[Output Only] The internal fully qualified service name
                  for this Forwarding Rule. This field is only used for internal load
                  balancing.'
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computeregionnetworkendpointgroups.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeRegionNetworkEndpointGroup
    plural: computeregionnetworkendpointgroups
    shortNames:
    - gcpcomputeregionnetworkendpointgroup
    - gcpcomputeregionnetworkendpointgroups
    singular: computeregionnetworkendpointgroup
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cloudFunction:
                description: |-
                  Immutable. Only valid when networkEndpointType is "SERVERLESS".
                  Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
                properties:
                  functionRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      Immutable. A user-defined name of the Cloud Function.
                      The function name is case-sensitive and must be 1-63 characters long.
                      Example value: "func1".
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudFunctionsFunction`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  urlMask:
                    description: |-
                      Immutable. A template to parse function field from a request URL. URL mask allows
                      for routing to multiple Cloud Functions without having to create
                      multiple Network Endpoint Groups and backend services.

                      For example, request URLs "mydomain.com/function1" and "mydomain.com/function2"
                      can be backed by the same Serverless NEG with URL mask "/". The URL mask
                      will parse them to { function = "function1" } and { function = "function2" } respectively.
                    type: string
                type: object
              cloudRun:
                description: |-
                  Immutable. Only valid when networkEndpointType is "SERVERLESS".
                  Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
                properties:
                  serviceRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      Immutable. Cloud Run service is the main resource of Cloud Run.
                      The service must be 1-63 characters long, and comply with RFC1035.
                      Example value: "run-service".
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `RunService`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  tag:
                    description: |-
                      Immutable. Cloud Run tag represents the "named-revision" to provide
                      additional fine-grained traffic routing information.
                      The tag must be 1-63 characters long, and comply with RFC1035.
                      Example value: "revision-0010".
                    type: string
                  urlMask:
                    description: |-
                      Immutable. A template to parse service and tag fields from a request URL.
                      URL mask allows for routing to multiple Run services without having
                      to create multiple network endpoint groups and backend services.

                      For example, request URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2"
                      an be backed by the same Serverless Network Endpoint Group (NEG) with
                      URL mask ".domain.com/". The URL mask will parse them to { service="bar1", tag="foo1" }
                      and { service="bar2", tag="foo2" } respectively.
                    type: string
                type: object
              description:
                description: |-
                  Immutable. An optional description of this resource. Provide this property when
                  you create the resource.
                type: string
              networkEndpointType:
                description: 'Immutable. Type of network endpoints in this network
                  endpoint group. Defaults to SERVERLESS Default value: "SERVERLESS"
                  Possible values: ["SERVERLESS", "PRIVATE_SERVICE_CONNECT"].'
                type: string
              networkRef:
                description: |-
                  Immutable. This field is only used for PSC.
                  The URL of the network to which all network endpoints in the NEG belong. Uses
                  "default" project network if unspecified.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeNetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              pscTargetService:
                description: |-
                  Immutable. The target service url used to set up private service connection to
                  a Google API or a PSC Producer Service Attachment.
                type: string
              region:
                description: Immutable. A reference to the region where the Serverless
                  NEGs Reside.
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              subnetworkRef:
                description: |-
                  Immutable. This field is only used for PSC.
                  Optional URL of the subnetwork to which all network endpoints in the NEG belong.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeSubnetwork`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - region
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              selfLink:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: computeserviceattachments.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeServiceAttachment
    plural: computeserviceattachments
    shortNames:
    - gcpcomputeserviceattachment
    - gcpcomputeserviceattachments
    singular: computeserviceattachment
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              connectionPreference:
                description: 'The connection preference of service attachment. The
                  value can be set to `ACCEPT_AUTOMATIC`. An `ACCEPT_AUTOMATIC` service
                  attachment is one that always accepts the connection from consumer
                  forwarding rules. Possible values: CONNECTION_PREFERENCE_UNSPECIFIED,
                  ACCEPT_AUTOMATIC, ACCEPT_MANUAL'
                type: string
              consumerAcceptLists:
                description: Projects that are allowed to connect to this service
                  attachment.
                items:
                  properties:
                    connectionLimit:
                      description: The value of the limit to set.
                      format: int64
                      type: integer
                    projectRef:
                      oneOf:
                      - not:
                          required:
                          - external
                        required:
                        - name
                      - not:
                          anyOf:
                          - required:
                            - name
                          - required:
                            - namespace
                        required:
                        - external
                      properties:
                        external:
                          description: |-
                            The project id or number for the project to set the limit for.

                            Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                      type: object
                  required:
                  - projectRef
                  type: object
                type: array
              consumerRejectLists:
                items:
                  oneOf:
                  - not:
                      required:
                      - external
                    required:
                    - name
                  - not:
                      anyOf:
                      - required:
                        - name
                      - required:
                        - namespace
                    required:
                    - external
                  properties:
                    external:
                      description: 'Allowed value: The Google Cloud resource name
                        of a `Project` resource (format: `projects/{{name}}`).'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                  type: object
                type: array
              description:
                description: An optional description of this resource. Provide this
                  property when you create the resource.
                type: string
              enableProxyProtocol:
                description: Immutable. If true, enable the proxy protocol which is
                  for supplying client TCP/IP address data in TCP connections that
                  traverse proxies on their way to destination servers.
                type: boolean
              location:
                description: Immutable. The location for the resource
                type: string
              natSubnets:
                items:
                  oneOf:
                  - not:
                      required:
                      - external
                    required:
                    - name
                  - not:
                      anyOf:
                      - required:
                        - name
                      - required:
                        - namespace
                    required:
                    - external
                  properties:
                    external:
                      description: 'Allowed value: The `selfLink` field of a `ComputeSubnetwork`
                        resource.'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                  type: object
                type: array
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for the resource

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              targetServiceRef:
                description: Immutable.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The URL of a service serving the endpoint identified by this service attachment.

                      Allowed value: The `selfLink` field of a `ComputeForwardingRule` resource.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - connectionPreference
            - location
            - natSubnets
            - projectRef
            - targetServiceRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              connectedEndpoints:
                description: An array of connections for all the consumers connected
                  to this service attachment.
                items:
                  properties:
                    endpoint:
                      description: The url of a connected endpoint.
                      type: string
                    pscConnectionId:
                      description: The PSC connection id of the connected endpoint.
                      format: int64
                      type: integer
                    status:
                      description: 'The status of a connected endpoint to this service
                        attachment. Possible values: PENDING, RUNNING, DONE'
                      type: string
                  type: object
                type: array
              fingerprint:
                description: Fingerprint of this resource. This field is used internally
                  during updates of this resource.
                type: string
              id:
                description: The unique identifier for the resource type. The server
                  generates this identifier.
                format: int64
                type: integer
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              pscServiceAttachmentId:
                description: An 128-bit global unique ID of the PSC service attachment.
                properties:
                  high:
                    format: int64
                    type: integer
                  low:
                    format: int64
                    type: integer
                type: object
              region:
                description: URL of the region where the service attachment resides.
                  This field applies only to the region resource. You must specify
                  this field as part of the HTTP request URL. It is not settable as
                  a field in the request body.
                type: string
              selfLink:
                description: Server-defined URL for the resource.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computetargethttpproxies.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeTargetHTTPProxy
    plural: computetargethttpproxies
    shortNames:
    - gcpcomputetargethttpproxy
    - gcpcomputetargethttpproxies
    singular: computetargethttpproxy
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: Immutable. An optional description of this resource.
                type: string
              location:
                description: 'Location represents the geographical location of the
                  ComputeTargetHTTPProxy. Specify a region name or "global" for global
                  resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)'
                type: string
              proxyBind:
                description: |-
                  Immutable. This field only applies when the forwarding rule that references
                  this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                type: boolean
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              urlMapRef:
                description: |-
                  A reference to the ComputeURLMap resource that defines the mapping
                  from URL to the BackendService.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `ComputeURLMap`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - location
            - urlMapRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              proxyId:
                description: The unique identifier for the resource.
                type: integer
              selfLink:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computeurlmaps.compute.cnrm.cloud.google.com
spec:
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeURLMap
    plural: computeurlmaps
    shortNames:
    - gcpcomputeurlmap
    - gcpcomputeurlmaps
    singular: computeurlmap
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              defaultRouteAction:
                description: |-
                  defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions, such as URL rewrites and header transformations, before forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
                  Only one of defaultRouteAction or defaultUrlRedirect must be set.
                  URL maps for Classic external HTTP(S) load balancers only support the urlRewrite action within defaultRouteAction.
                  defaultRouteAction has no effect when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
                properties:
                  corsPolicy:
                    description: |-
                      The specification for allowing client side cross-origin requests. Please see
                      [W3C Recommendation for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/).
                    properties:
                      allowCredentials:
                        description: |-
                          In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This field translates to the Access-Control-Allow-Credentials header.
                          Default is false.
                        type: boolean
                      allowHeaders:
                        description: Specifies the content for the Access-Control-Allow-Headers
                          header.
                        items:
                          type: string
                        type: array
                      allowMethods:
                        description: Specifies the content for the Access-Control-Allow-Methods
                          header.
                        items:
                          type: string
                        type: array
                      allowOriginRegexes:
                        description: |-
                          Specifies the regualar expression patterns that match allowed origins. For regular expression grammar
                          please see en.cppreference.com/w/cpp/regex/ecmascript
                          An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
                        items:
                          type: string
                        type: array
                      allowOrigins:
                        description: |-
                          Specifies the list of origins that will be allowed to do CORS requests.
                          An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
                        items:
                          type: string
                        type: array
                      disabled:
                        description: If true, the setting specifies the CORS policy
                          is disabled. The default value of false, which indicates
                          that the CORS policy is in effect.
                        type: boolean
                      exposeHeaders:
                        description: Specifies the content for the Access-Control-Expose-Headers
                          header.
                        items:
                          type: string
                        type: array
                      maxAge:
                        description: |-
                          Specifies how long results of a preflight request can be cached in seconds.
                          This translates to the Access-Control-Max-Age header.
                        type: integer
                    type: object
                  faultInjectionPolicy:
                    description: |-
                      The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
                      As part of fault injection, when clients send requests to a backend service, delays can be introduced by a load balancer on a percentage of requests before sending those requests to the backend service.
                      Similarly requests from clients can be aborted by the load balancer for a percentage of requests.
                      timeout and retryPolicy is ignored by clients that are configured with a faultInjectionPolicy if: 1. The traffic is generated by fault injection AND 2. The fault injection is not a delay fault injection.
                      Fault injection is not supported with the global external HTTP(S) load balancer (classic). To see which load balancers support fault injection, see Load balancing: [Routing and traffic management features](https://cloud.google.com/load-balancing/docs/features#routing-traffic-management).
                    properties:
                      abort:
                        description: The specification for how client requests are
                          aborted as part of fault injection.
                        properties:
                          httpStatus:
                            description: |-
                              The HTTP status code used to abort the request.
                              The value must be between 200 and 599 inclusive.
                            type: integer
                          percentage:
                            description: |-
                              The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.
                              The value must be between 0.0 and 100.0 inclusive.
                            type: number
                        type: object
                      delay:
                        description: The specification for how client requests are
                          delayed as part of fault injection, before being sent to
                          a backend service.
                        properties:
                          fixedDelay:
                            description: Specifies the value of the fixed delay interval.
                            properties:
                              nanos:
                                description: |-
                                  Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
                                  represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
                                type: integer
                              seconds:
                                description: |-
                                  Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
                                  Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
                                type: string
                            type: object
                          percentage:
                            description: |-
                              The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.
                              The value must be between 0.0 and 100.0 inclusive.
                            type: number
                        type: object
                    type: object
                  requestMirrorPolicy:
                    description: |-
                      Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
                      The load balancer does not wait for responses from the shadow service. Before sending traffic to the shadow service, the host / authority header is suffixed with -shadow.
                      Not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
                    properties:
                      backendServiceRef:
                        description: |-
                          The backend service resource being mirrored to.
                          The backend service configured for a mirroring policy must reference
                          backends that are of the same type as the original backend service
                          matched in the URL map.
                          Serverless NEG backends are not currently supported as a mirrored
                          backend service.
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: 'Allowed value: The `selfLink` field of a
                              `ComputeBackendService` resource.'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    type: object
                  retryPolicy:
                    description: Specifies the retry policy associated with this route.
                    properties:
                      numRetries:
                        description: Specifies the allowed number retries. This number
                          must be > 0. If not specified, defaults to 1.
                        type: integer
                      perTryTimeout:
                        description: |-
                          Specifies a non-zero timeout per retry attempt.

                          If not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set,
                          will use the largest timeout among all backend services associated with the route.
                        properties:
                          nanos:
                            description: |-
                              Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
                              represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
                            type: integer
                          seconds:
                            description: |-
                              Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
                              Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
                            type: string
                        type: object
                      retryConditions:
                        description: |-
                          Specifies one or more conditions when this retry policy applies.
                          Valid values are listed below. Only the following codes are supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
                            - 5xx : retry is attempted if the instance or endpoint responds with any 5xx response code, or if the instance or endpoint does not respond at all. For example, disconnects, reset, read timeout, connection failure, and refused streams.
                            - gateway-error : Similar to 5xx, but only applies to response codes 502, 503 or 504.
                            - connect-failure : a retry is attempted on failures connecting to the instance or endpoint. For example, connection timeouts.
                            - retriable-4xx : a retry is attempted if the instance or endpoint responds with a 4xx response code. The only error that you can retry is error code 409.
                            - refused-stream : a retry is attempted if the instance or endpoint resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.
                            - cancelled : a retry is attempted if the gRPC status code in the response header is set to cancelled.
                            - deadline-exceeded : a retry is attempted if the gRPC status code in the response header is set to deadline-exceeded.
                            - internal :  a retry is attempted if the gRPC status code in the response header is set to internal.
                            - resource-exhausted : a retry is attempted if the gRPC status code in the response header is set to resource-exhausted.
                            - unavailable : a retry is attempted if the gRPC status code in the response header is set to unavailable.
                        items:
                          type: string
                        type: array
                    type: object
                  timeout:
                    description: |-
                      Specifies the timeout for the selected route. Timeout is computed from the time the request has been fully processed (known as end-of-stream) up until the response has been processed. Timeout includes all retries.
                      If not specified, this field uses the largest timeout among all backend services associated with the route.
                      Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
                    properties:
                      nanos:
                        description: Span of time that's a fraction of a second at
                          nanosecond resolution. Durations less than one second are
                          represented with a 0 seconds field and a positive nanos
                          field. Must be from 0 to 999,999,999 inclusive.
                        type: integer
                      seconds:
                        description: 'Span of time at a resolution of a second. Must
                          be from 0 to 315,576,000,000 inclusive. Note: these bounds
                          are computed from: 60 sec/min * 60 min/hr * 24 hr/day *
                          365.25 days/year * 10000 years.'
                        type: string
                    type: object
                  urlRewrite:
                    description: |-
                      The spec to modify the URL of the request, before forwarding the request to the matched service.
                      urlRewrite is the only action supported in UrlMaps for external HTTP(S) load balancers.
                      Not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
                    properties:
                      hostRewrite:
                        description: |-
                          Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite.
                          The value must be from 1 to 255 characters.
                        type: string
                      pathPrefixRewrite:
                        description: |-
                          Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite.
                          The value must be from 1 to 1024 characters.
                        type: string
                    type: object
                  weightedBackendServices:
                    description: |-
                      A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non-zero number.
                      After a backend service is identified and before forwarding the request to the backend service, advanced routing actions such as URL rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.
                    items:
                      properties:
                        backendServiceRef:
                          description: |-
                            The default backend service resource.
                            Before forwarding the request to backendService, the loadbalancer
                            applies any relevant headerActions specified as part of this
                            backendServiceWeight.
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeBackendService` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                        headerAction:
                          description: |-
                            Specifies changes to request and response headers that need to take effect for the selected backendService.
                            headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
                            headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL.
                            Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
                          properties:
                            requestHeadersToAdd:
                              description: Headers to add to a matching request before
                                forwarding the request to the backendService.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header.
                                    type: string
                                  headerValue:
                                    description: The value of the header to add.
                                    type: string
                                  replace:
                                    description: |-
                                      If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.
                                      The default value is false.
                                    type: boolean
                                type: object
                              type: array
                            requestHeadersToRemove:
                              description: A list of header names for headers that
                                need to be removed from the request before forwarding
                                the request to the backendService.
                              items:
                                type: string
                              type: array
                            responseHeadersToAdd:
                              description: Headers to add the response before sending
                                the response back to the client.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header.
                                    type: string
                                  headerValue:
                                    description: The value of the header to add.
                                    type: string
                                  replace:
                                    description: |-
                                      If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.
                                      The default value is false.
                                    type: boolean
                                type: object
                              type: array
                            responseHeadersToRemove:
                              description: A list of header names for headers that
                                need to be removed from the response before sending
                                the response back to the client.
                              items:
                                type: string
                              type: array
                          type: object
                        weight:
                          description: |-
                            Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) .
                            The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy.
                            The value must be from 0 to 1000.
                          type: integer
                      type: object
                    type: array
                type: object
              defaultService:
                description: |-
                  The defaultService resource to which traffic is directed if none of
                  the hostRules match.
                  For the Global URL Map, it should be a reference to the backend
                  service or backend bucket.
                  For the Regional URL Map, it should be a reference to the backend
                  service.
                  If defaultRouteAction is additionally specified, advanced routing
                  actions like URL Rewrites, etc. take effect prior to sending the
                  request to the backend. However, if defaultService is specified,
                  defaultRouteAction cannot contain any weightedBackendServices.
                  Conversely, if routeAction specifies any weightedBackendServices,
                  service must not be specified. Only one of defaultService,
                  defaultUrlRedirect or defaultRouteAction.weightedBackendService
                  must be set.
                oneOf:
                - required:
                  - backendBucketRef
                - required:
                  - backendServiceRef
                properties:
                  backendBucketRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeBackendBucket`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  backendServiceRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `ComputeBackendService`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                type: object
              defaultUrlRedirect:
                description: |-
                  When none of the specified hostRules match, the request is redirected to a URL specified
                  by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
                  defaultRouteAction must not be set.
                properties:
                  hostRedirect:
                    description: |-
                      The host that will be used in the redirect response instead of the one that was
                      supplied in the request. The value must be between 1 and 255 characters.
                    type: string
                  httpsRedirect:
                    description: |-
                      If set to true, the URL scheme in the redirected request is set to https. If set to
                      false, the URL scheme of the redirected request will remain the same as that of the
                      request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
                      true for TargetHttpsProxy is not permitted. The default is set to false.
                    type: boolean
                  pathRedirect:
                    description: |-
                      The path that will be used in the redirect response instead of the one that was
                      supplied in the request. pathRedirect cannot be supplied together with
                      prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
                      original request will be used for the redirect. The value must be between 1 and 1024
                      characters.
                    type: string
                  prefixRedirect:
                    description: |-
                      The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
                      retaining the remaining portion of the URL before redirecting the request.
                      prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
                      neither. If neither is supplied, the path of the original request will be used for
                      the redirect. The value must be between 1 and 1024 characters.
                    type: string
                  redirectResponseCode:
                    description: |-
                      The HTTP Status code to use for this RedirectAction. Supported values are:

                      * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.

                      * FOUND, which corresponds to 302.

                      * SEE_OTHER which corresponds to 303.

                      * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
                      will be retained.

                      * PERMANENT_REDIRECT, which corresponds to 308. In this case,
                      the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"].
                    type: string
                  stripQuery:
                    description: |-
                      If set to true, any accompanying query portion of the original URL is removed prior
                      to redirecting the request. If set to false, the query portion of the original URL is
                      retained.
                       This field is required to ensure an empty block is not set. The normal default value is false.
                    type: boolean
                required:
                - stripQuery
                type: object
              description:
                description: |-
                  An optional description of this resource. Provide this property when
                  you create the resource.
                type: string
              headerAction:
                description: |-
                  Specifies changes to request and response headers that need to take effect for
                  the selected backendService. The headerAction specified here take effect after
                  headerAction specified under pathMatcher.
                properties:
                  requestHeadersToAdd:
                    description: |-
                      Headers to add to a matching request prior to forwarding the request to the
                      backendService.
                    items:
                      properties:
                        headerName:
                          description: The name of the header.
                          type: string
                        headerValue:
                          description: The value of the header to add.
                          type: string
                        replace:
                          description: |-
                            If false, headerValue is appended to any values that already exist for the
                            header. If true, headerValue is set for the header, discarding any values that
                            were set for that header.
                          type: boolean
                      required:
                      - headerName
                      - headerValue
                      - replace
                      type: object
                    type: array
                  requestHeadersToRemove:
                    description: |-
                      A list of header names for headers that need to be removed from the request
                      prior to forwarding the request to the backendService.
                    items:
                      type: string
                    type: array
                  responseHeadersToAdd:
                    description: Headers to add the response prior to sending the
                      response back to the client.
                    items:
                      properties:
                        headerName:
                          description: The name of the header.
                          type: string
                        headerValue:
                          description: The value of the header to add.
                          type: string
                        replace:
                          description: |-
                            If false, headerValue is appended to any values that already exist for the
                            header. If true, headerValue is set for the header, discarding any values that
                            were set for that header.
                          type: boolean
                      required:
                      - headerName
                      - headerValue
                      - replace
                      type: object
                    type: array
                  responseHeadersToRemove:
                    description: |-
                      A list of header names for headers that need to be removed from the response
                      prior to sending the response back to the client.
                    items:
                      type: string
                    type: array
                type: object
              hostRule:
                description: The list of HostRules to use against the URL.
                items:
                  properties:
                    description:
                      description: |-
                        An optional description of this HostRule. Provide this property
                        when you create the resource.
                      type: string
                    hosts:
                      description: |-
                        The list of host patterns to match. They must be valid
                        hostnames, except * will match any string of ([a-z0-9-.]*). In
                        that case, * must be the first character and must be followed in
                        the pattern by either - or ..
                      items:
                        type: string
                      type: array
                    pathMatcher:
                      description: |-
                        The name of the PathMatcher to use to match the path portion of
                        the URL if the hostRule matches the URL's host portion.
                      type: string
                  required:
                  - hosts
                  - pathMatcher
                  type: object
                type: array
              location:
                description: 'Location represents the geographical location of the
                  ComputeURLMap. Specify a region name or "global" for global resources.
                  Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)'
                type: string
              pathMatcher:
                description: The list of named PathMatchers to use against the URL.
                items:
                  properties:
                    defaultRouteAction:
                      description: |-
                        defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
                        advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
                        to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
                        Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.

                        Only one of defaultRouteAction or defaultUrlRedirect must be set.
                      properties:
                        corsPolicy:
                          description: |-
                            The specification for allowing client side cross-origin requests. Please see
                            [W3C Recommendation for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/).
                          properties:
                            allowCredentials:
                              description: |-
                                In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
                                This translates to the Access-Control-Allow-Credentials header.
                              type: boolean
                            allowHeaders:
                              description: Specifies the content for the Access-Control-Allow-Headers
                                header.
                              items:
                                type: string
                              type: array
                            allowMethods:
                              description: Specifies the content for the Access-Control-Allow-Methods
                                header.
                              items:
                                type: string
                              type: array
                            allowOriginRegexes:
                              description: |-
                                Specifies the regular expression patterns that match allowed origins. For regular expression grammar
                                please see en.cppreference.com/w/cpp/regex/ecmascript
                                An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
                              items:
                                type: string
                              type: array
                            allowOrigins:
                              description: |-
                                Specifies the list of origins that will be allowed to do CORS requests.
                                An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
                              items:
                                type: string
                              type: array
                            disabled:
                              description: If true, specifies the CORS policy is disabled.
                                The default value is false, which indicates that the
                                CORS policy is in effect.
                              type: boolean
                            exposeHeaders:
                              description: Specifies the content for the Access-Control-Expose-Headers
                                header.
                              items:
                                type: string
                              type: array
                            maxAge:
                              description: |-
                                Specifies how long results of a preflight request can be cached in seconds.
                                This translates to the Access-Control-Max-Age header.
                              type: integer
                          type: object
                        faultInjectionPolicy:
                          description: |-
                            The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
                            As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
                            percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
                            by the Loadbalancer for a percentage of requests.

                            timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
                          properties:
                            abort:
                              description: The specification for how client requests
                                are aborted as part of fault injection.
                              properties:
                                httpStatus:
                                  description: |-
                                    The HTTP status code used to abort the request.
                                    The value must be between 200 and 599 inclusive.
                                  type: integer
                                percentage:
                                  description: |-
                                    The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.
                                    The value must be between 0.0 and 100.0 inclusive.
                                  type: number
                              type: object
                            delay:
                              description: The specification for how client requests
                                are delayed as part of fault injection, before being
                                sent to a backend service.
                              properties:
                                fixedDelay:
                                  description: Specifies the value of the fixed delay
                                    interval.
                                  properties:
                                    nanos:
                                      description: |-
                                        Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
                                        represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
                                      type: integer
                                    seconds:
                                      description: |-
                                        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
                                        Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
                                      type: string
                                  type: object
                                percentage:
                                  description: |-
                                    The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.
                                    The value must be between 0.0 and 100.0 inclusive.
                                  type: number
                              type: object
                          type: object
                        requestMirrorPolicy:
                          description: |-
                            Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
                            Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
                            the host / authority header is suffixed with -shadow.
                          properties:
                            backendServiceRef:
                              description: Required. The backend service resource
                                being mirrored to.
                              oneOf:
                              - not:
                                  required:
                                  - external
                                required:
                                - name
                              - not:
                                  anyOf:
                                  - required:
                                    - name
                                  - required:
                                    - namespace
                                required:
                                - external
                              properties:
                                external:
                                  description: 'Allowed value: The `selfLink` field
                                    of a `ComputeBackendService` resource.'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                              type: object
                          required:
                          - backendServiceRef
                          type: object
                        retryPolicy:
                          description: Specifies the retry policy associated with
                            this route.
                          properties:
                            numRetries:
                              description: Specifies the allowed number retries. This
                                number must be > 0. If not specified, defaults to
                                1.
                              type: integer
                            perTryTimeout:
                              description: |-
                                Specifies a non-zero timeout per retry attempt.

                                If not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set,
                                will use the largest timeout among all backend services associated with the route.
                              properties:
                                nanos:
                                  description: |-
                                    Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
                                    represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
                                  type: integer
                                seconds:
                                  description: |-
                                    Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
                                    Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
                                  type: string
                              type: object
                            retryConditions:
                              description: |-
                                Specfies one or more conditions when this retry rule applies. Valid values are:

                                * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code,
                                  or if the backend service does not respond at all, example: disconnects, reset, read timeout,
                                * connection failure, and refused streams.
                                * gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.
                                * connect-failure: Loadbalancer will retry on failures connecting to backend services,
                                  for example due to connection timeouts.
                                * retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
                                  Currently the only retriable error supported is 409.
                                * refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code.
                                  This reset type indicates that it is safe to retry.
                                * cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled
                                * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded
                                * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted
                                * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable.
                              items:
                                type: string
                              type: array
                          type: object
                        timeout:
                          description: |-
                            Specifies the timeout for the selected route. Timeout is computed from the time the request has been
                            fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.

                            If not specified, will use the largest timeout among all backend services associated with the route.
                          properties:
                            nanos:
                              description: |-
                                Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented
                                with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
                              type: integer
                            seconds:
                              description: |-
                                Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
                                Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
                              type: string
                          type: object
                        urlRewrite:
                          description: The spec to modify the URL of the request,
                            prior to forwarding the request to the matched service.
                          properties:
                            hostRewrite:
                              description: |-
                                Prior to forwarding the request to the selected service, the request's host header is replaced
                                with contents of hostRewrite.

                                The value must be between 1 and 255 characters.
                              type: string
                            pathPrefixRewrite:
                              description: |-
                                Prior to forwarding the request to the selected backend service, the matching portion of the
                                request's path is replaced by pathPrefixRewrite.

                                The value must be between 1 and 1024 characters.
                              type: string
                          type: object
                        weightedBackendServices:
                          description: |-
                            A list of weighted backend services to send traffic to when a route match occurs.
                            The weights determine the fraction of traffic that flows to their corresponding backend service.
                            If all traffic needs to go to a single backend service, there must be one weightedBackendService
                            with weight set to a non 0 number.

                            Once a backendService is identified and before forwarding the request to the backend service,
                            advanced routing actions like Url rewrites and header transformations are applied depending on
                            additional settings specified in this HttpRouteAction.
                          items:
                            properties:
                              backendServiceRef:
                                description: |-
                                  The default backend service resource.
                                  Before forwarding the request to backendService, the loadbalancer
                                  applies any relevant headerActions specified as part of this
                                  backendServiceWeight.
                                oneOf:
                                - not:
                                    required:
                                    - external
                                  required:
                                  - name
                                - not:
                                    anyOf:
                                    - required:
                                      - name
                                    - required:
                                      - namespace
                                  required:
                                  - external
                                properties:
                                  external:
                                    description: 'Allowed value: The `selfLink` field
                                      of a `ComputeBackendService` resource.'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                type: object
                              headerAction:
                                description: |-
                                  Specifies changes to request and response headers that need to take effect for
                                  the selected backendService.

                                  headerAction specified here take effect before headerAction in the enclosing
                                  HttpRouteRule, PathMatcher and UrlMap.
                                properties:
                                  requestHeadersToAdd:
                                    description: Headers to add to a matching request
                                      prior to forwarding the request to the backendService.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to add.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: |-
                                            If false, headerValue is appended to any values that already exist for the header.
                                            If true, headerValue is set for the header, discarding any values that were set for that header.
                                          type: boolean
                                      type: object
                                    type: array
                                  requestHeadersToRemove:
                                    description: |-
                                      A list of header names for headers that need to be removed from the request prior to
                                      forwarding the request to the backendService.
                                    items:
                                      type: string
                                    type: array
                                  responseHeadersToAdd:
                                    description: Headers to add the response prior
                                      to sending the response back to the client.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to add.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: |-
                                            If false, headerValue is appended to any values that already exist for the header.
                                            If true, headerValue is set for the header, discarding any values that were set for that header.
                                          type: boolean
                                      type: object
                                    type: array
                                  responseHeadersToRemove:
                                    description: |-
                                      A list of header names for headers that need to be removed from the response prior to sending the
                                      response back to the client.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              weight:
                                description: |-
                                  Specifies the fraction of traffic sent to backendService, computed as
                                  weight / (sum of all weightedBackendService weights in routeAction) .

                                  The selection of a backend service is determined only for new traffic. Once a user's request
                                  has been directed to a backendService, subsequent requests will be sent to the same backendService
                                  as determined by the BackendService's session affinity policy.

                                  The value must be between 0 and 1000.
                                type: integer
                            type: object
                          type: array
                      type: object
                    defaultService:
                      description: |-
                        The default service to use if none of the pathRules defined by this
                        PathMatcher is matched by the URL's path portion.
                        For the Global URL Map, it should be a reference to the backend
                        service or backend bucket.
                        For the Regional URL Map, it should be a reference to the backend
                        service.
                      oneOf:
                      - required:
                        - backendBucketRef
                      - required:
                        - backendServiceRef
                      properties:
                        backendBucketRef:
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeBackendBucket` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                        backendServiceRef:
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeBackendService` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                      type: object
                    defaultUrlRedirect:
                      description: |-
                        When none of the specified hostRules match, the request is redirected to a URL specified
                        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
                        defaultRouteAction must not be set.
                      properties:
                        hostRedirect:
                          description: |-
                            The host that will be used in the redirect response instead of the one that was
                            supplied in the request. The value must be between 1 and 255 characters.
                          type: string
                        httpsRedirect:
                          description: |-
                            If set to true, the URL scheme in the redirected request is set to https. If set to
                            false, the URL scheme of the redirected request will remain the same as that of the
                            request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
                            true for TargetHttpsProxy is not permitted. The default is set to false.
                          type: boolean
                        pathRedirect:
                          description: |-
                            The path that will be used in the redirect response instead of the one that was
                            supplied in the request. pathRedirect cannot be supplied together with
                            prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
                            original request will be used for the redirect. The value must be between 1 and 1024
                            characters.
                          type: string
                        prefixRedirect:
                          description: |-
                            The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
                            retaining the remaining portion of the URL before redirecting the request.
                            prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
                            neither. If neither is supplied, the path of the original request will be used for
                            the redirect. The value must be between 1 and 1024 characters.
                          type: string
                        redirectResponseCode:
                          description: |-
                            The HTTP Status code to use for this RedirectAction. Supported values are:

                            * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.

                            * FOUND, which corresponds to 302.

                            * SEE_OTHER which corresponds to 303.

                            * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
                            will be retained.

                            * PERMANENT_REDIRECT, which corresponds to 308. In this case,
                            the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"].
                          type: string
                        stripQuery:
                          description: |-
                            If set to true, any accompanying query portion of the original URL is removed prior
                            to redirecting the request. If set to false, the query portion of the original URL is
                            retained.
                             This field is required to ensure an empty block is not set. The normal default value is false.
                          type: boolean
                      required:
                      - stripQuery
                      type: object
                    description:
                      description: An optional description of this resource.
                      type: string
                    headerAction:
                      description: |-
                        Specifies changes to request and response headers that need to take effect for
                        the selected backendService. HeaderAction specified here are applied after the
                        matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap.
                      properties:
                        requestHeadersToAdd:
                          description: |-
                            Headers to add to a matching request prior to forwarding the request to the
                            backendService.
                          items:
                            properties:
                              headerName:
                                description: The name of the header.
                                type: string
                              headerValue:
                                description: The value of the header to add.
                                type: string
                              replace:
                                description: |-
                                  If false, headerValue is appended to any values that already exist for the
                                  header. If true, headerValue is set for the header, discarding any values that
                                  were set for that header.
                                type: boolean
                            required:
                            - headerName
                            - headerValue
                            - replace
                            type: object
                          type: array
                        requestHeadersToRemove:
                          description: |-
                            A list of header names for headers that need to be removed from the request
                            prior to forwarding the request to the backendService.
                          items:
                            type: string
                          type: array
                        responseHeadersToAdd:
                          description: Headers to add the response prior to sending
                            the response back to the client.
                          items:
                            properties:
                              headerName:
                                description: The name of the header.
                                type: string
                              headerValue:
                                description: The value of the header to add.
                                type: string
                              replace:
                                description: |-
                                  If false, headerValue is appended to any values that already exist for the
                                  header. If true, headerValue is set for the header, discarding any values that
                                  were set for that header.
                                type: boolean
                            required:
                            - headerName
                            - headerValue
                            - replace
                            type: object
                          type: array
                        responseHeadersToRemove:
                          description: |-
                            A list of header names for headers that need to be removed from the response
                            prior to sending the response back to the client.
                          items:
                            type: string
                          type: array
                      type: object
                    name:
                      description: The name to which this PathMatcher is referred
                        by the HostRule.
                      type: string
                    pathRule:
                      description: |-
                        The list of path rules. Use this list instead of routeRules when routing based
                        on simple path matching is all that's required. The order by which path rules
                        are specified does not matter. Matches are always done on the longest-path-first
                        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
                        irrespective of the order in which those paths appear in this list. Within a
                        given pathMatcher, only one of pathRules or routeRules must be set.
                      items:
                        properties:
                          paths:
                            description: |-
                              The list of path patterns to match. Each must start with / and the only place a
                              \* is allowed is at the end following a /. The string fed to the path matcher
                              does not include any text after the first ? or #, and those chars are not
                              allowed here.
                            items:
                              type: string
                            type: array
                          routeAction:
                            description: |-
                              In response to a matching path, the load balancer performs advanced routing
                              actions like URL rewrites, header transformations, etc. prior to forwarding the
                              request to the selected backend. If routeAction specifies any
                              weightedBackendServices, service must not be set. Conversely if service is set,
                              routeAction cannot contain any  weightedBackendServices. Only one of routeAction
                              or urlRedirect must be set.
                            properties:
                              corsPolicy:
                                description: |-
                                  The specification for allowing client side cross-origin requests. Please see W3C
                                  Recommendation for Cross Origin Resource Sharing.
                                properties:
                                  allowCredentials:
                                    description: |-
                                      In response to a preflight request, setting this to true indicates that the
                                      actual request can include user credentials. This translates to the Access-
                                      Control-Allow-Credentials header. Defaults to false.
                                    type: boolean
                                  allowHeaders:
                                    description: Specifies the content for the Access-Control-Allow-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowMethods:
                                    description: Specifies the content for the Access-Control-Allow-Methods
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowOriginRegexes:
                                    description: |-
                                      Specifies the regular expression patterns that match allowed origins. For
                                      regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                      An origin is allowed if it matches either allow_origins or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  allowOrigins:
                                    description: |-
                                      Specifies the list of origins that will be allowed to do CORS requests. An
                                      origin is allowed if it matches either allow_origins or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  disabled:
                                    description: If true, specifies the CORS policy
                                      is disabled.
                                    type: boolean
                                  exposeHeaders:
                                    description: Specifies the content for the Access-Control-Expose-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  maxAge:
                                    description: |-
                                      Specifies how long the results of a preflight request can be cached. This
                                      translates to the content for the Access-Control-Max-Age header.
                                    type: integer
                                required:
                                - disabled
                                type: object
                              faultInjectionPolicy:
                                description: |-
                                  The specification for fault injection introduced into traffic to test the
                                  resiliency of clients to backend service failure. As part of fault injection,
                                  when clients send requests to a backend service, delays can be introduced by
                                  Loadbalancer on a percentage of requests before sending those request to the
                                  backend service. Similarly requests from clients can be aborted by the
                                  Loadbalancer for a percentage of requests. timeout and retry_policy will be
                                  ignored by clients that are configured with a fault_injection_policy.
                                properties:
                                  abort:
                                    description: |-
                                      The specification for how client requests are aborted as part of fault
                                      injection.
                                    properties:
                                      httpStatus:
                                        description: |-
                                          The HTTP status code used to abort the request. The value must be between 200
                                          and 599 inclusive.
                                        type: integer
                                      percentage:
                                        description: |-
                                          The percentage of traffic (connections/operations/requests) which will be
                                          aborted as part of fault injection. The value must be between 0.0 and 100.0
                                          inclusive.
                                        type: number
                                    required:
                                    - httpStatus
                                    - percentage
                                    type: object
                                  delay:
                                    description: |-
                                      The specification for how client requests are delayed as part of fault
                                      injection, before being sent to a backend service.
                                    properties:
                                      fixedDelay:
                                        description: Specifies the value of the fixed
                                          delay interval.
                                        properties:
                                          nanos:
                                            description: |-
                                              Span of time that's a fraction of a second at nanosecond resolution. Durations
                                              less than one second are represented with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999 inclusive.
                                            type: integer
                                          seconds:
                                            description: |-
                                              Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      percentage:
                                        description: |-
                                          The percentage of traffic (connections/operations/requests) on which delay will
                                          be introduced as part of fault injection. The value must be between 0.0 and
                                          100.0 inclusive.
                                        type: number
                                    required:
                                    - fixedDelay
                                    - percentage
                                    type: object
                                type: object
                              requestMirrorPolicy:
                                description: |-
                                  Specifies the policy on how requests intended for the route's backends are
                                  shadowed to a separate mirrored backend service. Loadbalancer does not wait for
                                  responses from the shadow service. Prior to sending traffic to the shadow
                                  service, the host / authority header is suffixed with -shadow.
                                properties:
                                  backendServiceRef:
                                    description: Required. The backend service resource
                                      being mirrored to.
                                    oneOf:
                                    - not:
                                        required:
                                        - external
                                      required:
                                      - name
                                    - not:
                                        anyOf:
                                        - required:
                                          - name
                                        - required:
                                          - namespace
                                      required:
                                      - external
                                    properties:
                                      external:
                                        description: 'Allowed value: The `selfLink`
                                          field of a `ComputeBackendService` resource.'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                    type: object
                                required:
                                - backendServiceRef
                                type: object
                              retryPolicy:
                                description: Specifies the retry policy associated
                                  with this route.
                                properties:
                                  numRetries:
                                    description: Specifies the allowed number retries.
                                      This number must be > 0.
                                    type: integer
                                  perTryTimeout:
                                    description: Specifies a non-zero timeout per
                                      retry attempt.
                                    properties:
                                      nanos:
                                        description: |-
                                          Span of time that's a fraction of a second at nanosecond resolution. Durations
                                          less than one second are represented with a 0 'seconds' field and a positive
                                          'nanos' field. Must be from 0 to 999,999,999 inclusive.
                                        type: integer
                                      seconds:
                                        description: |-
                                          Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  retryConditions:
                                    description: |-
                                      Specifies one or more conditions when this retry rule applies. Valid values are:

                                      - 5xx: Loadbalancer will attempt a retry if the backend service responds with
                                      any 5xx response code, or if the backend service does not respond at all,
                                      example: disconnects, reset, read timeout, connection failure, and refused
                                      streams.
                                      - gateway-error: Similar to 5xx, but only applies to response codes
                                      502, 503 or 504.
                                      - connect-failure: Loadbalancer will retry on failures
                                      connecting to backend services, for example due to connection timeouts.
                                      - retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
                                      Currently the only retriable error supported is 409.
                                      - refused-stream: Loadbalancer will retry if the backend service resets the stream with a
                                      REFUSED_STREAM error code. This reset type indicates that it is safe to retry.
                                      - cancelled: Loadbalancer will retry if the gRPC status code in the response
                                      header is set to cancelled
                                      - deadline-exceeded: Loadbalancer will retry if the
                                      gRPC status code in the response header is set to deadline-exceeded
                                      - resource-exhausted: Loadbalancer will retry if the gRPC status code in the response
                                      header is set to resource-exhausted
                                      - unavailable: Loadbalancer will retry if
                                      the gRPC status code in the response header is set to unavailable.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              timeout:
                                description: |-
                                  Specifies the timeout for the selected route. Timeout is computed from the time
                                  the request is has been fully processed (i.e. end-of-stream) up until the
                                  response has been completely processed. Timeout includes all retries. If not
                                  specified, the default value is 15 seconds.
                                properties:
                                  nanos:
                                    description: |-
                                      Span of time that's a fraction of a second at nanosecond resolution. Durations
                                      less than one second are represented with a 0 'seconds' field and a positive
                                      'nanos' field. Must be from 0 to 999,999,999 inclusive.
                                    type: integer
                                  seconds:
                                    description: |-
                                      Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                                      inclusive.
                                    type: string
                                required:
                                - seconds
                                type: object
                              urlRewrite:
                                description: |-
                                  The spec to modify the URL of the request, prior to forwarding the request to
                                  the matched service.
                                properties:
                                  hostRewrite:
                                    description: |-
                                      Prior to forwarding the request to the selected service, the request's host
                                      header is replaced with contents of hostRewrite. The value must be between 1 and
                                      255 characters.
                                    type: string
                                  pathPrefixRewrite:
                                    description: |-
                                      Prior to forwarding the request to the selected backend service, the matching
                                      portion of the request's path is replaced by pathPrefixRewrite. The value must
                                      be between 1 and 1024 characters.
                                    type: string
                                type: object
                              weightedBackendServices:
                                description: |-
                                  A list of weighted backend services to send traffic to when a route match
                                  occurs. The weights determine the fraction of traffic that flows to their
                                  corresponding backend service. If all traffic needs to go to a single backend
                                  service, there must be one  weightedBackendService with weight set to a non 0
                                  number. Once a backendService is identified and before forwarding the request to
                                  the backend service, advanced routing actions like Url rewrites and header
                                  transformations are applied depending on additional settings specified in this
                                  HttpRouteAction.
                                items:
                                  properties:
                                    backendServiceRef:
                                      description: |-
                                        Required. The default backend service resource. Before forwarding
                                        the request to backendService, the loadbalancer applies any relevant
                                        headerActions specified as part of this backendServiceWeight.
                                      oneOf:
                                      - not:
                                          required:
                                          - external
                                        required:
                                        - name
                                      - not:
                                          anyOf:
                                          - required:
                                            - name
                                          - required:
                                            - namespace
                                        required:
                                        - external
                                      properties:
                                        external:
                                          description: 'Allowed value: The `selfLink`
                                            field of a `ComputeBackendService` resource.'
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                        namespace:
                                          description: 'Namespace of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                          type: string
                                      type: object
                                    headerAction:
                                      description: |-
                                        Specifies changes to request and response headers that need to take effect for
                                        the selected backendService. headerAction specified here take effect before
                                        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
                                      properties:
                                        requestHeadersToAdd:
                                          description: |-
                                            Headers to add to a matching request prior to forwarding the request to the
                                            backendService.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: |-
                                                  If false, headerValue is appended to any values that already exist for the
                                                  header. If true, headerValue is set for the header, discarding any values that
                                                  were set for that header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        requestHeadersToRemove:
                                          description: |-
                                            A list of header names for headers that need to be removed from the request
                                            prior to forwarding the request to the backendService.
                                          items:
                                            type: string
                                          type: array
                                        responseHeadersToAdd:
                                          description: Headers to add the response
                                            prior to sending the response back to
                                            the client.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: |-
                                                  If false, headerValue is appended to any values that already exist for the
                                                  header. If true, headerValue is set for the header, discarding any values that
                                                  were set for that header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        responseHeadersToRemove:
                                          description: |-
                                            A list of header names for headers that need to be removed from the response
                                            prior to sending the response back to the client.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    weight:
                                      description: |-
                                        Specifies the fraction of traffic sent to backendService, computed as weight /
                                        (sum of all weightedBackendService weights in routeAction) . The selection of a
                                        backend service is determined only for new traffic. Once a user's request has
                                        been directed to a backendService, subsequent requests will be sent to the same
                                        backendService as determined by the BackendService's session affinity policy.
                                        The value must be between 0 and 1000.
                                      type: integer
                                  required:
                                  - backendServiceRef
                                  - weight
                                  type: object
                                type: array
                            type: object
                          service:
                            description: |-
                              The backend service to which traffic is directed if this rule is
                              matched.
                              For the Global URL Map, it should be a reference to the backend
                              service or backend bucket.
                              For the Regional URL Map, it should be a reference to the backend
                              service.
                              If routeAction is additionally specified, advanced routing actions
                              like URL Rewrites, etc. take effect prior to sending the request to
                              the backend. However, if service is specified, routeAction cannot
                              contain any weightedBackendServices. Conversely, if routeAction
                              specifies any weightedBackendServices, service must not be
                              specified. Only one of urlRedirect, service or
                              routeAction.weightedBackendService must be set.
                            oneOf:
                            - required:
                              - backendBucketRef
                            - required:
                              - backendServiceRef
                            properties:
                              backendBucketRef:
                                oneOf:
                                - not:
                                    required:
                                    - external
                                  required:
                                  - name
                                - not:
                                    anyOf:
                                    - required:
                                      - name
                                    - required:
                                      - namespace
                                  required:
                                  - external
                                properties:
                                  external:
                                    description: 'Allowed value: The `selfLink` field
                                      of a `ComputeBackendBucket` resource.'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                type: object
                              backendServiceRef:
                                oneOf:
                                - not:
                                    required:
                                    - external
                                  required:
                                  - name
                                - not:
                                    anyOf:
                                    - required:
                                      - name
                                    - required:
                                      - namespace
                                  required:
                                  - external
                                properties:
                                  external:
                                    description: 'Allowed value: The `selfLink` field
                                      of a `ComputeBackendService` resource.'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                type: object
                            type: object
                          urlRedirect:
                            description: |-
                              When a path pattern is matched, the request is redirected to a URL specified
                              by urlRedirect. If urlRedirect is specified, service or routeAction must not
                              be set.
                            properties:
                              hostRedirect:
                                description: |-
                                  The host that will be used in the redirect response instead of the one
                                  that was supplied in the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: |-
                                  If set to true, the URL scheme in the redirected request is set to https.
                                  If set to false, the URL scheme of the redirected request will remain the
                                  same as that of the request. This must only be set for UrlMaps used in
                                  TargetHttpProxys. Setting this true for TargetHttpsProxy is not
                                  permitted. The default is set to false.
                                type: boolean
                              pathRedirect:
                                description: |-
                                  The path that will be used in the redirect response instead of the one
                                  that was supplied in the request. pathRedirect cannot be supplied
                                  together with prefixRedirect. Supply one alone or neither. If neither is
                                  supplied, the path of the original request will be used for the redirect.
                                  The value must be between 1 and 1024 characters.
                                type: string
                              prefixRedirect:
                                description: |-
                                  The prefix that replaces the prefixMatch specified in the
                                  HttpRouteRuleMatch, retaining the remaining portion of the URL before
                                  redirecting the request. prefixRedirect cannot be supplied together with
                                  pathRedirect. Supply one alone or neither. If neither is supplied, the
                                  path of the original request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              redirectResponseCode:
                                description: |-
                                  The HTTP Status code to use for this RedirectAction. Supported values are:

                                  * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.

                                  * FOUND, which corresponds to 302.

                                  * SEE_OTHER which corresponds to 303.

                                  * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
                                  will be retained.

                                  * PERMANENT_REDIRECT, which corresponds to 308. In this case,
                                  the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"].
                                type: string
                              stripQuery:
                                description: |-
                                  If set to true, any accompanying query portion of the original URL is removed
                                  prior to redirecting the request. If set to false, the query portion of the
                                  original URL is retained.
                                   This field is required to ensure an empty block is not set. The normal default value is false.
                                type: boolean
                            required:
                            - stripQuery
                            type: object
                        required:
                        - paths
                        type: object
                      type: array
                    routeRules:
                      description: |-
                        The list of ordered HTTP route rules. Use this list instead of pathRules when
                        advanced route matching and routing actions are desired. The order of specifying
                        routeRules matters: the first rule that matches will cause its specified routing
                        action to take effect. Within a given pathMatcher, only one of pathRules or
                        routeRules must be set. routeRules are not supported in UrlMaps intended for
                        External load balancers.
                      items:
                        properties:
                          headerAction:
                            description: |-
                              Specifies changes to request and response headers that need to take effect for
                              the selected backendService. The headerAction specified here are applied before
                              the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].r
                              outeAction.weightedBackendService.backendServiceWeightAction[].headerAction.
                            properties:
                              requestHeadersToAdd:
                                description: |-
                                  Headers to add to a matching request prior to forwarding the request to the
                                  backendService.
                                items:
                                  properties:
                                    headerName:
                                      description: The name of the header.
                                      type: string
                                    headerValue:
                                      description: The value of the header to add.
                                      type: string
                                    replace:
                                      description: |-
                                        If false, headerValue is appended to any values that already exist for the
                                        header. If true, headerValue is set for the header, discarding any values that
                                        were set for that header.
                                      type: boolean
                                  required:
                                  - headerName
                                  - headerValue
                                  - replace
                                  type: object
                                type: array
                              requestHeadersToRemove:
                                description: |-
                                  A list of header names for headers that need to be removed from the request
                                  prior to forwarding the request to the backendService.
                                items:
                                  type: string
                                type: array
                              responseHeadersToAdd:
                                description: Headers to add the response prior to
                                  sending the response back to the client.
                                items:
                                  properties:
                                    headerName:
                                      description: The name of the header.
                                      type: string
                                    headerValue:
                                      description: The value of the header to add.
                                      type: string
                                    replace:
                                      description: |-
                                        If false, headerValue is appended to any values that already exist for the
                                        header. If true, headerValue is set for the header, discarding any values that
                                        were set for that header.
                                      type: boolean
                                  required:
                                  - headerName
                                  - headerValue
                                  - replace
                                  type: object
                                type: array
                              responseHeadersToRemove:
                                description: |-
                                  A list of header names for headers that need to be removed from the response
                                  prior to sending the response back to the client.
                                items:
                                  type: string
                                type: array
                            type: object
                          matchRules:
                            description: The rules for determining a match.
                            items:
                              properties:
                                fullPathMatch:
                                  description: |-
                                    For satisfying the matchRule condition, the path of the request must exactly
                                    match the value specified in fullPathMatch after removing any query parameters
                                    and anchor that may be part of the original URL. FullPathMatch must be between 1
                                    and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
                                    be specified.
                                  type: string
                                headerMatches:
                                  description: |-
                                    Specifies a list of header match criteria, all of which must match corresponding
                                    headers in the request.
                                  items:
                                    properties:
                                      exactMatch:
                                        description: |-
                                          The value should exactly match contents of exactMatch. Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
                                        type: string
                                      headerName:
                                        description: |-
                                          The name of the HTTP header to match. For matching against the HTTP request's
                                          authority, use a headerMatch with the header name ":authority". For matching a
                                          request's method, use the headerName ":method".
                                        type: string
                                      invertMatch:
                                        description: |-
                                          If set to false, the headerMatch is considered a match if the match criteria
                                          above are met. If set to true, the headerMatch is considered a match if the
                                          match criteria above are NOT met. Defaults to false.
                                        type: boolean
                                      prefixMatch:
                                        description: |-
                                          The value of the header must start with the contents of prefixMatch. Only one of
                                          exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
                                          must be set.
                                        type: string
                                      presentMatch:
                                        description: |-
                                          A header with the contents of headerName must exist. The match takes place
                                          whether or not the request's header has a value or not. Only one of exactMatch,
                                          prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
                                        type: boolean
                                      rangeMatch:
                                        description: |-
                                          The header value must be an integer and its value must be in the range specified
                                          in rangeMatch. If the header does not contain an integer, number or is empty,
                                          the match fails. For example for a range [-5, 0]

                                          * -3 will match
                                          * 0 will not match
                                          * 0.25 will not match
                                          * -3someString will not match.

                                          Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
                                          rangeMatch must be set.
                                        properties:
                                          rangeEnd:
                                            description: The end of the range (exclusive).
                                            type: integer
                                          rangeStart:
                                            description: The start of the range (inclusive).
                                            type: integer
                                        required:
                                        - rangeEnd
                                        - rangeStart
                                        type: object
                                      regexMatch:
                                        description: |-
                                          The value of the header must match the regular expression specified in
                                          regexMatch. For regular expression grammar, please see:
                                          en.cppreference.com/w/cpp/regex/ecmascript  For matching against a port
                                          specified in the HTTP request, use a headerMatch with headerName set to PORT and
                                          a regular expression that satisfies the RFC2616 Host header's port specifier.
                                          Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
                                          rangeMatch must be set.
                                        type: string
                                      suffixMatch:
                                        description: |-
                                          The value of the header must end with the contents of suffixMatch. Only one of
                                          exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
                                          must be set.
                                        type: string
                                    required:
                                    - headerName
                                    type: object
                                  type: array
                                ignoreCase:
                                  description: |-
                                    Specifies that prefixMatch and fullPathMatch matches are case sensitive.
                                    Defaults to false.
                                  type: boolean
                                metadataFilters:
                                  description: |-
                                    Opaque filter criteria used by Loadbalancer to restrict routing configuration to
                                    a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
                                    clients present node metadata. If a match takes place, the relevant routing
                                    configuration is made available to those proxies. For each metadataFilter in
                                    this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
                                    filterLabels must match the corresponding label provided in the metadata. If its
                                    filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
                                    with corresponding labels in the provided metadata. metadataFilters specified
                                    here can be overrides those specified in ForwardingRule that refers to this
                                    UrlMap. metadataFilters only applies to Loadbalancers that have their
                                    loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                                  items:
                                    properties:
                                      filterLabels:
                                        description: |-
                                          The list of label value pairs that must match labels in the provided metadata
                                          based on filterMatchCriteria  This list must not be empty and can have at the
                                          most 64 entries.
                                        items:
                                          properties:
                                            name:
                                              description: |-
                                                Name of metadata label. The name can have a maximum length of 1024 characters
                                                and must be at least 1 character long.
                                              type: string
                                            value:
                                              description: |-
                                                The value of the label must match the specified value. value can have a maximum
                                                length of 1024 characters.
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      filterMatchCriteria:
                                        description: |-
                                          Specifies how individual filterLabel matches within the list of filterLabels
                                          contribute towards the overall metadataFilter match. Supported values are:

                                          * MATCH_ANY: At least one of the filterLabels must have a matching label in the
                                          provided metadata.
                                          * MATCH_ALL: All filterLabels must have matching labels in
                                          the provided metadata. Possible values: ["MATCH_ALL", "MATCH_ANY"].
                                        type: string
                                    required:
                                    - filterLabels
                                    - filterMatchCriteria
                                    type: object
                                  type: array
                                prefixMatch:
                                  description: |-
                                    For satisfying the matchRule condition, the request's path must begin with the
                                    specified prefixMatch. prefixMatch must begin with a /. The value must be
                                    between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
                                    regexMatch must be specified.
                                  type: string
                                queryParameterMatches:
                                  description: |-
                                    Specifies a list of query parameter match criteria, all of which must match
                                    corresponding query parameters in the request.
                                  items:
                                    properties:
                                      exactMatch:
                                        description: |-
                                          The queryParameterMatch matches if the value of the parameter exactly matches
                                          the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
                                          must be set.
                                        type: string
                                      name:
                                        description: |-
                                          The name of the query parameter to match. The query parameter must exist in the
                                          request, in the absence of which the request match fails.
                                        type: string
                                      presentMatch:
                                        description: |-
                                          Specifies that the queryParameterMatch matches if the request contains the query
                                          parameter, irrespective of whether the parameter has a value or not. Only one of
                                          presentMatch, exactMatch and regexMatch must be set.
                                        type: boolean
                                      regexMatch:
                                        description: |-
                                          The queryParameterMatch matches if the value of the parameter matches the
                                          regular expression specified by regexMatch. For the regular expression grammar,
                                          please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
                                          exactMatch and regexMatch must be set.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                regexMatch:
                                  description: |-
                                    For satisfying the matchRule condition, the path of the request must satisfy the
                                    regular expression specified in regexMatch after removing any query parameters
                                    and anchor supplied with the original URL. For regular expression grammar please
                                    see en.cppreference.com/w/cpp/regex/ecmascript  Only one of prefixMatch,
                                    fullPathMatch or regexMatch must be specified.
                                  type: string
                              type: object
                            type: array
                          priority:
                            description: |-
                              For routeRules within a given pathMatcher, priority determines the order
                              in which load balancer will interpret routeRules. RouteRules are evaluated
                              in order of priority, from the lowest to highest number. The priority of
                              a rule decreases as its number increases (1, 2, 3, N+1). The first rule
                              that matches the request is applied.

                              You cannot configure two or more routeRules with the same priority.
                              Priority for each rule must be set to a number between 0 and
                              2147483647 inclusive.

                              Priority numbers can have gaps, which enable you to add or remove rules
                              in the future without affecting the rest of the rules. For example,
                              1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
                              you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
                              future without any impact on existing rules.
                            type: integer
                          routeAction:
                            description: |-
                              In response to a matching matchRule, the load balancer performs advanced routing
                              actions like URL rewrites, header transformations, etc. prior to forwarding the
                              request to the selected backend. If  routeAction specifies any
                              weightedBackendServices, service must not be set. Conversely if service is set,
                              routeAction cannot contain any  weightedBackendServices. Only one of routeAction
                              or urlRedirect must be set.
                            properties:
                              corsPolicy:
                                description: |-
                                  The specification for allowing client side cross-origin requests. Please see W3C
                                  Recommendation for Cross Origin Resource Sharing.
                                properties:
                                  allowCredentials:
                                    description: |-
                                      In response to a preflight request, setting this to true indicates that the
                                      actual request can include user credentials. This translates to the Access-
                                      Control-Allow-Credentials header. Defaults to false.
                                    type: boolean
                                  allowHeaders:
                                    description: Specifies the content for the Access-Control-Allow-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowMethods:
                                    description: Specifies the content for the Access-Control-Allow-Methods
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  allowOriginRegexes:
                                    description: |-
                                      Specifies the regular expression patterns that match allowed origins. For
                                      regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
                                      An origin is allowed if it matches either allow_origins or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  allowOrigins:
                                    description: |-
                                      Specifies the list of origins that will be allowed to do CORS requests. An
                                      origin is allowed if it matches either allow_origins or allow_origin_regex.
                                    items:
                                      type: string
                                    type: array
                                  disabled:
                                    description: |-
                                      If true, specifies the CORS policy is disabled.
                                      which indicates that the CORS policy is in effect. Defaults to false.
                                    type: boolean
                                  exposeHeaders:
                                    description: Specifies the content for the Access-Control-Expose-Headers
                                      header.
                                    items:
                                      type: string
                                    type: array
                                  maxAge:
                                    description: |-
                                      Specifies how long the results of a preflight request can be cached. This
                                      translates to the content for the Access-Control-Max-Age header.
                                    type: integer
                                type: object
                              faultInjectionPolicy:
                                description: |-
                                  The specification for fault injection introduced into traffic to test the
                                  resiliency of clients to backend service failure. As part of fault injection,
                                  when clients send requests to a backend service, delays can be introduced by
                                  Loadbalancer on a percentage of requests before sending those request to the
                                  backend service. Similarly requests from clients can be aborted by the
                                  Loadbalancer for a percentage of requests. timeout and retry_policy will be
                                  ignored by clients that are configured with a fault_injection_policy.
                                properties:
                                  abort:
                                    description: |-
                                      The specification for how client requests are aborted as part of fault
                                      injection.
                                    properties:
                                      httpStatus:
                                        description: |-
                                          The HTTP status code used to abort the request. The value must be between 200
                                          and 599 inclusive.
                                        type: integer
                                      percentage:
                                        description: |-
                                          The percentage of traffic (connections/operations/requests) which will be
                                          aborted as part of fault injection. The value must be between 0.0 and 100.0
                                          inclusive.
                                        type: number
                                    type: object
                                  delay:
                                    description: |-
                                      The specification for how client requests are delayed as part of fault
                                      injection, before being sent to a backend service.
                                    properties:
                                      fixedDelay:
                                        description: Specifies the value of the fixed
                                          delay interval.
                                        properties:
                                          nanos:
                                            description: |-
                                              Span of time that's a fraction of a second at nanosecond resolution. Durations
                                              less than one second are represented with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999 inclusive.
                                            type: integer
                                          seconds:
                                            description: |-
                                              Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      percentage:
                                        description: |-
                                          The percentage of traffic (connections/operations/requests) on which delay will
                                          be introduced as part of fault injection. The value must be between 0.0 and
                                          100.0 inclusive.
                                        type: number
                                    type: object
                                type: object
                              requestMirrorPolicy:
                                description: |-
                                  Specifies the policy on how requests intended for the route's backends are
                                  shadowed to a separate mirrored backend service. Loadbalancer does not wait for
                                  responses from the shadow service. Prior to sending traffic to the shadow
                                  service, the host / authority header is suffixed with -shadow.
                                properties:
                                  backendServiceRef:
                                    description: Required. The backend service resource
                                      being mirrored to.
                                    oneOf:
                                    - not:
                                        required:
                                        - external
                                      required:
                                      - name
                                    - not:
                                        anyOf:
                                        - required:
                                          - name
                                        - required:
                                          - namespace
                                      required:
                                      - external
                                    properties:
                                      external:
                                        description: 'Allowed value: The `selfLink`
                                          field of a `ComputeBackendService` resource.'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                    type: object
                                required:
                                - backendServiceRef
                                type: object
                              retryPolicy:
                                description: Specifies the retry policy associated
                                  with this route.
                                properties:
                                  numRetries:
                                    description: Specifies the allowed number retries.
                                      This number must be > 0.
                                    type: integer
                                  perTryTimeout:
                                    description: Specifies a non-zero timeout per
                                      retry attempt.
                                    properties:
                                      nanos:
                                        description: |-
                                          Span of time that's a fraction of a second at nanosecond resolution. Durations
                                          less than one second are represented with a 0 'seconds' field and a positive
                                          'nanos' field. Must be from 0 to 999,999,999 inclusive.
                                        type: integer
                                      seconds:
                                        description: |-
                                          Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                                          inclusive.
                                        type: string
                                    required:
                                    - seconds
                                    type: object
                                  retryConditions:
                                    description: |-
                                      Specifies one or more conditions when this retry rule applies. Valid values are:

                                      * 5xx: Loadbalancer will attempt a retry if the backend service responds with
                                        any 5xx response code, or if the backend service does not respond at all,
                                        example: disconnects, reset, read timeout, connection failure, and refused
                                        streams.
                                      * gateway-error: Similar to 5xx, but only applies to response codes
                                        502, 503 or 504.
                                      * connect-failure: Loadbalancer will retry on failures
                                        connecting to backend services, for example due to connection timeouts.
                                      * retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
                                        Currently the only retriable error supported is 409.
                                      * refused-stream: Loadbalancer will retry if the backend service resets the stream with a
                                        REFUSED_STREAM error code. This reset type indicates that it is safe to retry.
                                      * cancelled: Loadbalancer will retry if the gRPC status code in the response
                                        header is set to cancelled
                                      * deadline-exceeded: Loadbalancer will retry if the
                                        gRPC status code in the response header is set to deadline-exceeded
                                      * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response
                                        header is set to resource-exhausted
                                      * unavailable: Loadbalancer will retry if the gRPC status code in
                                        the response header is set to unavailable.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - numRetries
                                type: object
                              timeout:
                                description: |-
                                  Specifies the timeout for the selected route. Timeout is computed from the time
                                  the request is has been fully processed (i.e. end-of-stream) up until the
                                  response has been completely processed. Timeout includes all retries. If not
                                  specified, the default value is 15 seconds.
                                properties:
                                  nanos:
                                    description: |-
                                      Span of time that's a fraction of a second at nanosecond resolution. Durations
                                      less than one second are represented with a 0 'seconds' field and a positive
                                      'nanos' field. Must be from 0 to 999,999,999 inclusive.
                                    type: integer
                                  seconds:
                                    description: |-
                                      Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                                      inclusive.
                                    type: string
                                required:
                                - seconds
                                type: object
                              urlRewrite:
                                description: |-
                                  The spec to modify the URL of the request, prior to forwarding the request to
                                  the matched service.
                                properties:
                                  hostRewrite:
                                    description: |-
                                      Prior to forwarding the request to the selected service, the request's host
                                      header is replaced with contents of hostRewrite. The value must be between 1 and
                                      255 characters.
                                    type: string
                                  pathPrefixRewrite:
                                    description: |-
                                      Prior to forwarding the request to the selected backend service, the matching
                                      portion of the request's path is replaced by pathPrefixRewrite. The value must
                                      be between 1 and 1024 characters.
                                    type: string
                                type: object
                              weightedBackendServices:
                                description: |-
                                  A list of weighted backend services to send traffic to when a route match
                                  occurs. The weights determine the fraction of traffic that flows to their
                                  corresponding backend service. If all traffic needs to go to a single backend
                                  service, there must be one  weightedBackendService with weight set to a non 0
                                  number. Once a backendService is identified and before forwarding the request to
                                  the backend service, advanced routing actions like Url rewrites and header
                                  transformations are applied depending on additional settings specified in this
                                  HttpRouteAction.
                                items:
                                  properties:
                                    backendServiceRef:
                                      description: |-
                                        Required. The default backend service resource. Before forwarding
                                        the request to backendService, the loadbalancer applies any relevant
                                        headerActions specified as part of this backendServiceWeight.
                                      oneOf:
                                      - not:
                                          required:
                                          - external
                                        required:
                                        - name
                                      - not:
                                          anyOf:
                                          - required:
                                            - name
                                          - required:
                                            - namespace
                                        required:
                                        - external
                                      properties:
                                        external:
                                          description: 'Allowed value: The `selfLink`
                                            field of a `ComputeBackendService` resource.'
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                        namespace:
                                          description: 'Namespace of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                          type: string
                                      type: object
                                    headerAction:
                                      description: |-
                                        Specifies changes to request and response headers that need to take effect for
                                        the selected backendService. headerAction specified here take effect before
                                        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
                                      properties:
                                        requestHeadersToAdd:
                                          description: |-
                                            Headers to add to a matching request prior to forwarding the request to the
                                            backendService.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: |-
                                                  If false, headerValue is appended to any values that already exist for the
                                                  header. If true, headerValue is set for the header, discarding any values that
                                                  were set for that header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        requestHeadersToRemove:
                                          description: |-
                                            A list of header names for headers that need to be removed from the request
                                            prior to forwarding the request to the backendService.
                                          items:
                                            type: string
                                          type: array
                                        responseHeadersToAdd:
                                          description: Headers to add the response
                                            prior to sending the response back to
                                            the client.
                                          items:
                                            properties:
                                              headerName:
                                                description: The name of the header.
                                                type: string
                                              headerValue:
                                                description: The value of the header
                                                  to add.
                                                type: string
                                              replace:
                                                description: |-
                                                  If false, headerValue is appended to any values that already exist for the
                                                  header. If true, headerValue is set for the header, discarding any values that
                                                  were set for that header.
                                                type: boolean
                                            required:
                                            - headerName
                                            - headerValue
                                            - replace
                                            type: object
                                          type: array
                                        responseHeadersToRemove:
                                          description: |-
                                            A list of header names for headers that need to be removed from the response
                                            prior to sending the response back to the client.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    weight:
                                      description: |-
                                        Specifies the fraction of traffic sent to backendService, computed as weight /
                                        (sum of all weightedBackendService weights in routeAction) . The selection of a
                                        backend service is determined only for new traffic. Once a user's request has
                                        been directed to a backendService, subsequent requests will be sent to the same
                                        backendService as determined by the BackendService's session affinity policy.
                                        The value must be between 0 and 1000.
                                      type: integer
                                  required:
                                  - backendServiceRef
                                  - weight
                                  type: object
                                type: array
                            type: object
                          service:
                            description: |-
                              The region backend service resource to which traffic is
                              directed if this rule is matched. If routeAction is additionally specified,
                              advanced routing actions like URL Rewrites, etc. take effect prior to sending
                              the request to the backend. However, if service is specified, routeAction cannot
                              contain any weightedBackendService s. Conversely, if routeAction specifies any
                              weightedBackendServices, service must not be specified. Only one of urlRedirect,
                              service or routeAction.weightedBackendService must be set.
                            type: string
                          urlRedirect:
                            description: |-
                              When this rule is matched, the request is redirected to a URL specified by
                              urlRedirect. If urlRedirect is specified, service or routeAction must not be
                              set.
                            properties:
                              hostRedirect:
                                description: |-
                                  The host that will be used in the redirect response instead of the one
                                  that was supplied in the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: |-
                                  If set to true, the URL scheme in the redirected request is set to https.
                                  If set to false, the URL scheme of the redirected request will remain the
                                  same as that of the request. This must only be set for UrlMaps used in
                                  TargetHttpProxys. Setting this true for TargetHttpsProxy is not
                                  permitted. The default is set to false.
                                type: boolean
                              pathRedirect:
                                description: |-
                                  The path that will be used in the redirect response instead of the one
                                  that was supplied in the request. pathRedirect cannot be supplied
                                  together with prefixRedirect. Supply one alone or neither. If neither is
                                  supplied, the path of the original request will be used for the redirect.
                                  The value must be between 1 and 1024 characters.
                                type: string
                              prefixRedirect:
                                description: |-
                                  The prefix that replaces the prefixMatch specified in the
                                  HttpRouteRuleMatch, retaining the remaining portion of the URL before
                                  redirecting the request. prefixRedirect cannot be supplied together with
                                  pathRedirect. Supply one alone or neither. If neither is supplied, the
                                  path of the original request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              redirectResponseCode:
                                description: |-
                                  The HTTP Status code to use for this RedirectAction. Supported values are:

                                  * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.

                                  * FOUND, which corresponds to 302.

                                  * SEE_OTHER which corresponds to 303.

                                  * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
                                  will be retained.

                                  * PERMANENT_REDIRECT, which corresponds to 308. In this case,
                                  the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"].
                                type: string
                              stripQuery:
                                description: |-
                                  If set to true, any accompanying query portion of the original URL is
                                  removed prior to redirecting the request. If set to false, the query
                                  portion of the original URL is retained. The default value is false.
                                type: boolean
                            type: object
                        required:
                        - priority
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              test:
                description: |-
                  The list of expected URL mappings. Requests to update this UrlMap will
                  succeed only if all of the test cases pass.
                items:
                  properties:
                    description:
                      description: Description of this test case.
                      type: string
                    host:
                      description: Host portion of the URL.
                      type: string
                    path:
                      description: Path portion of the URL.
                      type: string
                    service:
                      description: |-
                        The backend service resource that should be matched by this test.
                        For the Global URL Map, it should be a reference to the backend
                        service or backend bucket.
                        For the Regional URL Map, it should be a reference to the backend
                        service.
                      oneOf:
                      - required:
                        - backendBucketRef
                      - required:
                        - backendServiceRef
                      properties:
                        backendBucketRef:
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeBackendBucket` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                        backendServiceRef:
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `ComputeBackendService` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                      type: object
                  required:
                  - host
                  - path
                  - service
                  type: object
                type: array
            required:
            - location
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTimestamp:
                description: Creation timestamp in RFC3339 text format.
                type: string
              fingerprint:
                description: |-
                  Fingerprint of this resource. This field is used internally during
                  updates of this resource.
                type: string
              mapId:
                description: The unique identifier for the resource.
                type: integer
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              selfLink:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: dnsrecordsets.dns.cnrm.cloud.google.com
spec:
  group: dns.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: DNSRecordSet
    plural: dnsrecordsets
    shortNames:
    - gcpdnsrecordset
    - gcpdnsrecordsets
    singular: dnsrecordset
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            oneOf:
            - required:
              - rrdatas
            - required:
              - rrdatasRefs
            properties:
              managedZoneRef:
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `DNSManagedZone`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              name:
                description: Immutable. The DNS name this record set will apply to.
                type: string
              rrdatas:
                description: DEPRECATED. Although this field is still available, there
                  is limited support. We recommend that you use `spec.rrdatasRefs`
                  instead.
                items:
                  type: string
                type: array
              rrdatasRefs:
                items:
                  oneOf:
                  - not:
                      required:
                      - external
                    required:
                    - name
                    - kind
                  - not:
                      anyOf:
                      - required:
                        - name
                      - required:
                        - namespace
                      - required:
                        - kind
                    required:
                    - external
                  properties:
                    external:
                      description: 'Allowed value: The `address` field of a `ComputeAddress`
                        resource.'
                      type: string
                    kind:
                      description: 'Kind of the referent. Allowed values: ComputeAddress'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                  type: object
                type: array
              ttl:
                description: The time-to-live of this record set (seconds).
                type: integer
              type:
                description: The DNS record set type.
                type: string
            required:
            - managedZoneRef
            - name
            - type
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: eventarctriggers.eventarc.cnrm.cloud.google.com
spec:
  group: eventarc.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: EventarcTrigger
    plural: eventarctriggers
    shortNames:
    - gcpeventarctrigger
    - gcpeventarctriggers
    singular: eventarctrigger
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              channelRef:
                description: Immutable.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: Optional. The name of the channel associated with
                      the trigger in `projects/{project}/locations/{location}/channels/{channel}`
                      format. You must provide a channel to receive events from Eventarc
                      SaaS partners.
                    type: string
                  name:
                    description: |-
                      [WARNING] EventarcChannel not yet supported in Config Connector, use 'external' field to reference existing resources.
                      Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              destination:
                description: Required. Destination specifies where the events should
                  be sent to.
                properties:
                  cloudFunctionRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: |-
                          [WARNING] Configuring a Cloud Function in Trigger is not supported as of today. The Cloud Function resource name. Format: projects/{project}/locations/{location}/functions/{function}

                          Allowed value: The Google Cloud resource name of a `CloudFunctionsFunction` resource (format: `projects/{{project}}/locations/{{region}}/functions/{{name}}`).
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  cloudRunService:
                    description: Cloud Run fully-managed service that receives the
                      events. The service should be running in the same project of
                      the trigger.
                    properties:
                      path:
                        description: 'Optional. The relative path on the Cloud Run
                          service the events should be sent to. The value must conform
                          to the definition of URI path segment (section 3.3 of RFC2396).
                          Examples: "/route", "route", "route/subroute".'
                        type: string
                      region:
                        description: Required. The region the Cloud Run service is
                          deployed in.
                        type: string
                      serviceRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              Required. The name of the Cloud Run service being addressed. See https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services. Only services located in the same project of the trigger object can be addressed.

                              Allowed value: The Google Cloud resource name of a `RunService` resource (format: `projects/{{project}}/locations/{{location}}/services/{{name}}`).
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    required:
                    - region
                    - serviceRef
                    type: object
                  gke:
                    description: A GKE service capable of receiving events. The service
                      should be running in the same project as the trigger.
                    properties:
                      clusterRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              Required. The name of the cluster the GKE service is running in. The cluster must be running in the same project as the trigger being created.

                              Allowed value: The `selfLink` field of a `ContainerCluster` resource.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                      location:
                        description: Required. The name of the Google Compute Engine
                          in which the cluster resides, which can either be compute
                          zone (for example, us-central1-a) for the zonal clusters
                          or region (for example, us-central1) for regional clusters.
                        type: string
                      namespace:
                        description: Required. The namespace the GKE service is running
                          in.
                        type: string
                      path:
                        description: 'Optional. The relative path on the GKE service
                          the events should be sent to. The value must conform to
                          the definition of a URI path segment (section 3.3 of RFC2396).
                          Examples: "/route", "route", "route/subroute".'
                        type: string
                      service:
                        description: Required. Name of the GKE service.
                        type: string
                    required:
                    - clusterRef
                    - location
                    - namespace
                    - service
                    type: object
                  workflowRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'The resource name of the Workflow whose Executions
                          are triggered by the events. The Workflow resource should
                          be deployed in the same project as the trigger. Format:
                          `projects/{project}/locations/{location}/workflows/{workflow}`'
                        type: string
                      name:
                        description: |-
                          [WARNING] WorkflowsWorkflow not yet supported in Config Connector, use 'external' field to reference existing resources.
                          Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                type: object
              location:
                description: Immutable. The location for the resource
                type: string
              matchingCriteria:
                description: Required. null The list of filters that applies to event
                  attributes. Only events that match all the provided filters will
                  be sent to the destination.
                items:
                  properties:
                    attribute:
                      description: Required. The name of a CloudEvents attribute.
                        Currently, only a subset of attributes are supported for filtering.
                        All triggers MUST provide a filter for the 'type' attribute.
                      type: string
                    operator:
                      description: Optional. The operator used for matching the events
                        with the value of the filter. If not specified, only events
                        that have an exact key-value pair specified in the filter
                        are matched. The only allowed value is `match-path-pattern`.
                      type: string
                    value:
                      description: Required. The value for the attribute. See https://cloud.google.com/eventarc/docs/creating-triggers#trigger-gcloud
                        for available values.
                      type: string
                  required:
                  - attribute
                  - value
                  type: object
                type: array
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for the resource

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              serviceAccountRef:
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      Optional. The IAM service account email associated with the trigger. The service account represents the identity of the trigger. The principal who calls this API must have `iam.serviceAccounts.actAs` permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts#sa_common for more information. For Cloud Run destinations, this service account is used to generate identity tokens when invoking the service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services. In order to create Audit Log triggers, the service account should also have `roles/eventarc.eventReceiver` IAM role.

                      Allowed value: The `email` field of an `IAMServiceAccount` resource.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              transport:
                description: Immutable. Optional. In order to deliver messages, Eventarc
                  may use other GCP products as transport intermediary. This field
                  contains a reference to that transport intermediary. This information
                  can be used for debugging purposes.
                properties:
                  pubsub:
                    description: Immutable. The Pub/Sub topic and subscription used
                      by Eventarc as delivery intermediary.
                    properties:
                      topicRef:
                        description: Immutable.
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              Optional. The name of the Pub/Sub topic created and managed by Eventarc system as a transport for the event delivery. Format: `projects/{PROJECT_ID}/topics/{TOPIC_NAME}. You may set an existing topic for triggers of the type google.cloud.pubsub.topic.v1.messagePublished` only. The topic you provide here will not be deleted by Eventarc at trigger deletion.

                              Allowed value: The Google Cloud resource name of a `PubSubTopic` resource (format: `projects/{{project}}/topics/{{name}}`).
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    type: object
                type: object
            required:
            - destination
            - location
            - matchingCriteria
            - projectRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: Output only. The creation time.
                format: date-time
                type: string
              etag:
                description: Output only. This checksum is computed by the server
                  based on the value of other fields, and may be sent only on create
                  requests to ensure the client has an up-to-date value before proceeding.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              resourceConditions:
                additionalProperties:
                  type: string
                description: Output only. The reason(s) why a trigger is in FAILED
                  state.
                type: object
              transport:
                properties:
                  pubsub:
                    properties:
                      subscription:
                        description: 'Output only. The name of the Pub/Sub subscription
                          created and managed by Eventarc system as a transport for
                          the event delivery. Format: `projects/{PROJECT_ID}/subscriptions/{SUBSCRIPTION_NAME}`.'
                        type: string
                    type: object
                type: object
              uid:
                description: Output only. Server assigned unique identifier for the
                  trigger. The value is a UUID4 string and guaranteed to remain unchanged
                  until the resource is deleted.
                type: string
              updateTime:
                description: Output only. The last-modified time.
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: iampartialpolicies.iam.cnrm.cloud.google.com
spec:
  group: iam.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: IAMPartialPolicy
    plural: iampartialpolicies
    shortNames:
    - gcpiampartialpolicy
    - gcpiampartialpolicies
    singular: iampartialpolicy
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True' the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IAMPartialPolicy is the Schema for the iampartialpolicy API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IAMPartialPolicySpec defines the desired state of IAMPartialPolicy
            properties:
              bindings:
                description: Optional. The list of IAM bindings managed by Config
                  Connector.
                items:
                  description: Specifies the members to bind to an IAM role.
                  properties:
                    condition:
                      description: Optional. The condition under which the binding
                        applies.
                      properties:
                        description:
                          type: string
                        expression:
                          type: string
                        title:
                          type: string
                      required:
                      - expression
                      - title
                      type: object
                    members:
                      description: Optional. The list of IAM users to be bound to
                        the role.
                      items:
                        oneOf:
                        - required:
                          - member
                        - required:
                          - memberFrom
                        properties:
                          member:
                            description: The IAM identity to be bound to the role.
                              Exactly one of 'member' or 'memberFrom' must be used.
                            type: string
                          memberFrom:
                            description: The IAM identity to be bound to the role.
                              Exactly one of 'member' or 'memberFrom' must be used,
                              and only one subfield within 'memberFrom' can be used.
                            oneOf:
                            - required:
                              - logSinkRef
                            - required:
                              - serviceAccountRef
                            - required:
                              - serviceIdentityRef
                            - required:
                              - sqlInstanceRef
                            properties:
                              logSinkRef:
                                description: The LoggingLogSink whose writer identity
                                  (i.e. its 'status.writerIdentity') is to be bound
                                  to the role.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                - name
                                type: object
                              serviceAccountRef:
                                description: The IAMServiceAccount to be bound to
                                  the role.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                - name
                                type: object
                              serviceIdentityRef:
                                description: The ServiceIdentity whose service account
                                  (i.e., its 'status.email') is to be bound to the
                                  role.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                - name
                                type: object
                              sqlInstanceRef:
                                description: The SQLInstance whose service account
                                  (i.e. its 'status.serviceAccountEmailAddress') is
                                  to be bound to the role.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                        type: object
                      type: array
                    role:
                      description: Required. The role to bind the users to.
                      pattern: ^((projects|organizations)/[^/]+/)?roles/[\w_\.]+$
                      type: string
                  required:
                  - role
                  type: object
                type: array
              resourceRef:
                description: Immutable. Required. The GCP resource to set the IAM
                  policy on.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                    - required:
                      - apiVersion
                    - required:
                      - external
                properties:
                  apiVersion:
                    type: string
                  external:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - kind
                type: object
            required:
            - resourceRef
            type: object
          status:
            description: IAMPartialPolicyStatus defines the observed state of IAMPartialPolicy
            properties:
              allBindings:
                description: AllBindings surfaces all IAM bindings for the referenced
                  resource.
                items:
                  description: Specifies the members to bind to an IAM role.
                  properties:
                    condition:
                      description: Optional. The condition under which the binding
                        applies.
                      properties:
                        description:
                          type: string
                        expression:
                          type: string
                        title:
                          type: string
                      required:
                      - expression
                      - title
                      type: object
                    members:
                      description: Optional. The list of IAM users to be bound to
                        the role.
                      items:
                        type: string
                      type: array
                    role:
                      description: Required. The role to bind the users to.
                      type: string
                  required:
                  - role
                  type: object
                type: array
              conditions:
                description: Conditions represent the latest available observations
                  of the IAM policy's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              lastAppliedBindings:
                description: LastAppliedBindings is the list of IAM bindings that
                  were most recently applied by Config Connector.
                items:
                  description: Specifies the members to bind to an IAM role.
                  properties:
                    condition:
                      description: Optional. The condition under which the binding
                        applies.
                      properties:
                        description:
                          type: string
                        expression:
                          type: string
                        title:
                          type: string
                      required:
                      - expression
                      - title
                      type: object
                    members:
                      description: Optional. The list of IAM users to be bound to
                        the role.
                      items:
                        type: string
                      type: array
                    role:
                      description: Required. The role to bind the users to.
                      type: string
                  required:
                  - role
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: iampolicymembers.iam.cnrm.cloud.google.com
spec:
  group: iam.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: IAMPolicyMember
    plural: iampolicymembers
    shortNames:
    - gcpiampolicymember
    - gcpiampolicymembers
    singular: iampolicymember
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True' the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IAMPolicyMember is the Schema for the iampolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IAMPolicyMemberSpec defines the desired state of IAMPolicyMember
            oneOf:
            - required:
              - member
            - required:
              - memberFrom
            properties:
              condition:
                description: Immutable. Optional. The condition under which the binding
                  applies.
                properties:
                  description:
                    type: string
                  expression:
                    type: string
                  title:
                    type: string
                required:
                - expression
                - title
                type: object
              member:
                description: Immutable. The IAM identity to be bound to the role.
                  Exactly one of 'member' or 'memberFrom' must be used.
                type: string
              memberFrom:
                description: Immutable. The IAM identity to be bound to the role.
                  Exactly one of 'member' or 'memberFrom' must be used, and only one
                  subfield within 'memberFrom' can be used.
                oneOf:
                - required:
                  - logSinkRef
                - required:
                  - serviceAccountRef
                - required:
                  - serviceIdentityRef
                - required:
                  - sqlInstanceRef
                properties:
                  logSinkRef:
                    description: The LoggingLogSink whose writer identity (i.e. its
                      'status.writerIdentity') is to be bound to the role.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                  serviceAccountRef:
                    description: The IAMServiceAccount to be bound to the role.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                  serviceIdentityRef:
                    description: The ServiceIdentity whose service account (i.e.,
                      its 'status.email') is to be bound to the role.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                  sqlInstanceRef:
                    description: The SQLInstance whose service account (i.e. its 'status.serviceAccountEmailAddress')
                      is to be bound to the role.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                type: object
              resourceRef:
                description: Immutable. Required. The GCP resource to set the IAM
                  policy on.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                    - required:
                      - apiVersion
                    - required:
                      - external
                properties:
                  apiVersion:
                    type: string
                  external:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - kind
                type: object
              role:
                description: Immutable. Required. The role for which the Member will
                  be bound.
                pattern: ^((projects|organizations)/[^/]+/)?roles/[\w_\.]+$
                type: string
            required:
            - resourceRef
            - role
            type: object
          status:
            description: IAMPolicyMemberStatus defines the observed state of IAMPolicyMember
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the IAM policy's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: iamserviceaccounts.iam.cnrm.cloud.google.com
spec:
  group: iam.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: IAMServiceAccount
    plural: iamserviceaccounts
    shortNames:
    - gcpiamserviceaccount
    - gcpiamserviceaccounts
    singular: iamserviceaccount
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A text description of the service account. Must be less
                  than or equal to 256 UTF-8 bytes.
                type: string
              disabled:
                description: Whether the service account is disabled. Defaults to
                  false.
                type: boolean
              displayName:
                description: The display name for the service account. Can be updated
                  without creating a new resource.
                type: string
              resourceID:
                description: Immutable. Optional. The accountId of the resource. Used
                  for creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              email:
                description: The e-mail address of the service account. This value
                  should be referenced from any google_iam_policy data sources that
                  would grant the service account privileges.
                type: string
              member:
                description: The Identity of the service account in the form 'serviceAccount:{email}'.
                  This value is often used to refer to the service account in order
                  to grant IAM permissions.
                type: string
              name:
                description: The fully-qualified name of the service account.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              uniqueId:
                description: The unique id of the service account.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: pubsubtopics.pubsub.cnrm.cloud.google.com
spec:
  group: pubsub.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: PubSubTopic
    plural: pubsubtopics
    shortNames:
    - gcppubsubtopic
    - gcppubsubtopics
    singular: pubsubtopic
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kmsKeyRef:
                description: |-
                  The KMSCryptoKey to be used to protect access to messages published
                  on this topic. Your project's Pub/Sub service account
                  ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com')
                  must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this
                  feature.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `KMSCryptoKey`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              messageRetentionDuration:
                description: |-
                  Indicates the minimum duration to retain a message after it is published
                  to the topic. If this field is set, messages published to the topic in
                  the last messageRetentionDuration are always available to subscribers.
                  For instance, it allows any attached subscription to seek to a timestamp
                  that is up to messageRetentionDuration in the past. If this field is not
                  set, message retention is controlled by settings on individual subscriptions.
                  Cannot be more than 31 days or less than 10 minutes.
                type: string
              messageStoragePolicy:
                description: |-
                  Policy constraining the set of Google Cloud Platform regions where
                  messages published to the topic may be stored. If not present, then no
                  constraints are in effect.
                properties:
                  allowedPersistenceRegions:
                    description: |-
                      A list of IDs of GCP regions where messages that are published to
                      the topic may be persisted in storage. Messages published by
                      publishers running in non-allowed GCP regions (or running outside
                      of GCP altogether) will be routed for storage in one of the
                      allowed regions. An empty list means that no regions are allowed,
                      and is not a valid configuration.
                    items:
                      type: string
                    type: array
                required:
                - allowedPersistenceRegions
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              schemaSettings:
                description: Settings for validating messages published against a
                  schema.
                properties:
                  encoding:
                    description: 'Immutable. The encoding of messages validated against
                      schema. Default value: "ENCODING_UNSPECIFIED" Possible values:
                      ["ENCODING_UNSPECIFIED", "JSON", "BINARY"].'
                    type: string
                  schemaRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: string of the format `projects/{{project}}/schemas/{{value}}`,
                          where {{value}} is the `name` field of a `PubSubSchema`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                required:
                - schemaRef
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.101.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
  name: runservices.run.cnrm.cloud.google.com
spec:
  group: run.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: RunService
    plural: runservices
    shortNames:
    - gcprunservice
    - gcprunservices
    singular: runservice
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: 'Unstructured key value map that may be set by external
                  tools to store and arbitrary metadata. They are not queryable and
                  should be preserved when modifying objects. Cloud Run will populate
                  some annotations using ''run.googleapis.com'' or ''serving.knative.dev''
                  namespaces. This field follows Kubernetes annotations'' namespacing,
                  limits, and rules. More info: http://kubernetes.io/docs/user-guide/annotations'
                type: object
              binaryAuthorization:
                description: Settings for the Binary Authorization feature.
                properties:
                  breakglassJustification:
                    description: If present, indicates to use Breakglass using this
                      justification. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
                    type: string
                  useDefault:
                    description: If True, indicates to use the default project's binary
                      authorization policy. If False, binary authorization will be
                      disabled
                    type: boolean
                type: object
              client:
                description: Arbitrary identifier for the API client.
                type: string
              clientVersion:
                description: Arbitrary version identifier for the API client.
                type: string
              description:
                description: User-provided description of the Service.
                type: string
              ingress:
                description: Provides the ingress settings for this Service. On output,
                  returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED
                  if no revision is active.
                type: string
              launchStage:
                description: 'The launch stage as defined by [Google Cloud Platform
                  Launch Stages](http://cloud.google.com/terms/launch-stages). Cloud
                  Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified,
                  GA is assumed. Possible values: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED,
                  PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED'
                type: string
              location:
                description: Immutable. The location for the resource
                type: string
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for the resource

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              template:
                description: Required. The template used to create revisions for this
                  Service.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: KRM-style annotations for the resource.
                    type: object
                  containerConcurrency:
                    description: Sets the maximum number of requests that each serving
                      instance can receive.
                    format: int64
                    type: integer
                  containers:
                    description: Holds the single container that defines the unit
                      of execution for this Revision.
                    items:
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with
                            a double $$, ie: $$(VAR_NAME). Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container.
                          items:
                            properties:
                              name:
                                description: Required. Name of the environment variable.
                                  Must be a C_IDENTIFIER, and mnay not exceed 32768
                                  characters.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previous defined environment
                                  variables in the container and any route environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  The $(VAR_NAME) syntax can be escaped with a double
                                  $$, ie: $$(VAR_NAME). Escaped references will never
                                  be expanded, regardless of whether the variable
                                  exists or not. Defaults to "", and the maximum length
                                  is 32768 bytes.'
                                type: string
                              valueSource:
                                description: Source for the environment variable's
                                  value.
                                properties:
                                  secretKeyRef:
                                    description: Selects a secret and a specific version
                                      from Cloud Secret Manager.
                                    properties:
                                      secretRef:
                                        oneOf:
                                        - not:
                                            required:
                                            - external
                                          required:
                                          - name
                                        - not:
                                            anyOf:
                                            - required:
                                              - name
                                            - required:
                                              - namespace
                                          required:
                                          - external
                                        properties:
                                          external:
                                            description: |-
                                              Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.

                                              Allowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                          namespace:
                                            description: 'Namespace of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                            type: string
                                        type: object
                                      versionRef:
                                        oneOf:
                                        - not:
                                            required:
                                            - external
                                          required:
                                          - name
                                        - not:
                                            anyOf:
                                            - required:
                                              - name
                                            - required:
                                              - namespace
                                          required:
                                          - external
                                        properties:
                                          external:
                                            description: |-
                                              The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.

                                              Allowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                          namespace:
                                            description: 'Namespace of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                            type: string
                                        type: object
                                    required:
                                    - secretRef
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        image:
                          description: 'Required. URL of the Container image in Google
                            Container Registry or Docker More info: https://kubernetes.io/docs/concepts/containers/images'
                          type: string
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Only a single port can be specified. The specified ports
                            must be listening on all interfaces (0.0.0.0) within the
                            container to be accessible. If omitted, a port number
                            will be chosen and passed to the container through the
                            PORT environment variable for the container to listen
                            on.
                          items:
                            properties:
                              containerPort:
                                description: Port number the container listens on.
                                  This must be a valid TCP port number, 0 < container_port
                                  < 65536.
                                format: int64
                                type: integer
                              name:
                                description: If specified, used to specify which protocol
                                  to use. Allowed values are "http1" and "h2c".
                                type: string
                            type: object
                          type: array
                        resources:
                          description: 'Compute Resource requirements by this container.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            cpuIdle:
                              description: Determines whether CPU should be throttled
                                or not outside of requests.
                              type: boolean
                            limits:
                              additionalProperties:
                                type: string
                              description: 'Only memory and CPU are supported. Note:
                                The only supported values for CPU are ''1'', ''2'',
                                and ''4''. Setting 4 CPU requires at least 2Gi of
                                memory. The values of the map is string form of the
                                ''quantity'' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                              type: object
                          type: object
                        volumeMounts:
                          description: Volume to mount into the container's filesystem.
                          items:
                            properties:
                              mountPath:
                                description: Required. Path within the container at
                                  which the volume should be mounted. Must not contain
                                  ':'. For Cloud SQL volumes, it can be left empty,
                                  or must otherwise be `/cloudsql`. All instances
                                  defined in the Volume will be available as `/cloudsql/[instance]`.
                                  For more information on Cloud SQL volumes, visit
                                  https://cloud.google.com/sql/docs/mysql/connect-run
                                type: string
                              name:
                                description: Required. This must match the Name of
                                  a Volume.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - image
                      type: object
                    type: array
                  executionEnvironment:
                    description: 'The sandbox environment to host this Revision. Possible
                      values: EXECUTION_ENVIRONMENT_UNSPECIFIED, EXECUTION_ENVIRONMENT_GEN1,
                      EXECUTION_ENVIRONMENT_GEN2'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: KRM-style labels for the resource.
                    type: object
                  revision:
                    description: The unique name for the revision. If this field is
                      omitted, it will be automatically generated based on the Service
                      name.
                    type: string
                  scaling:
                    description: Scaling settings for this Revision.
                    properties:
                      maxInstanceCount:
                        description: Maximum number of serving instances that this
                          resource should have.
                        format: int64
                        type: integer
                      minInstanceCount:
                        description: Minimum number of serving instances that this
                          resource should have.
                        format: int64
                        type: integer
                    type: object
                  serviceAccountRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: |-
                          Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.

                          Allowed value: The `email` field of an `IAMServiceAccount` resource.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  timeout:
                    description: Max allowed time for an instance to respond to a
                      request.
                    type: string
                  volumes:
                    description: A list of Volumes to make available to containers.
                    items:
                      properties:
                        cloudSqlInstance:
                          description: For Cloud SQL volumes, contains the specific
                            instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run
                            for more information on how to connect Cloud SQL and Cloud
                            Run.
                          properties:
                            instances:
                              items:
                                oneOf:
                                - not:
                                    required:
                                    - external
                                  required:
                                  - name
                                - not:
                                    anyOf:
                                    - required:
                                      - name
                                    - required:
                                      - namespace
                                  required:
                                  - external
                                properties:
                                  external:
                                    description: 'Allowed value: The `instanceName`
                                      field of a `SQLInstance` resource.'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                type: object
                              type: array
                          type: object
                        name:
                          description: Required. Volume's name.
                          type: string
                        secret:
                          description: 'Secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'Integer representation of mode bits to
                                use on created files by default. Must be a value between
                                0000 and 0777 (octal), defaulting to 0644. Directories
                                within the path are not affected by this setting.
                                Notes * Internally, a umask of 0222 will be applied
                                to any non-zero value. * This is an integer representation
                                of the mode bits. So, the octal integer value should
                                look exactly as the chmod numeric notation with a
                                leading zero. Some examples: for chmod 777 (a=rwx),
                                set to 0777 (octal) or 511 (base-10). For chmod 640
                                (u=rw,g=r), set to 0640 (octal) or 416 (base-10).
                                For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal)
                                or 493 (base-10). * This might be in conflict with
                                other options that affect the file mode, like fsGroup,
                                and the result can be other mode bits set. This might
                                be in conflict with other options that affect the
                                file mode, like fsGroup, and as a result, other mode
                                bits could be set.'
                              format: int64
                              type: integer
                            items:
                              description: If unspecified, the volume will expose
                                a file whose name is the secret, relative to VolumeMount.mount_path.
                                If specified, the key will be used as the version
                                to fetch from Cloud Secret Manager and the path will
                                be the name of the file exposed in the volume. When
                                items are defined, they must specify a path and a
                                version.
                              items:
                                properties:
                                  mode:
                                    description: 'Integer octal mode bits to use on
                                      this file, must be a value between 01 and 0777
                                      (octal). If 0 or not set, the Volume''s default
                                      mode will be used. Notes * Internally, a umask
                                      of 0222 will be applied to any non-zero value.
                                      * This is an integer representation of the mode
                                      bits. So, the octal integer value should look
                                      exactly as the chmod numeric notation with a
                                      leading zero. Some examples: for chmod 777 (a=rwx),
                                      set to 0777 (octal) or 511 (base-10). For chmod
                                      640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10).
                                      For chmod 755 (u=rwx,g=rx,o=rx), set to 0755
                                      (octal) or 493 (base-10). * This might be in
                                      conflict with other options that affect the
                                      file mode, like fsGroup, and the result can
                                      be other mode bits set.'
                                    format: int64
                                    type: integer
                                  path:
                                    description: Required. The relative path of the
                                      secret in the container.
                                    type: string
                                  versionRef:
                                    oneOf:
                                    - not:
                                        required:
                                        - external
                                      required:
                                      - name
                                    - not:
                                        anyOf:
                                        - required:
                                          - name
                                        - required:
                                          - namespace
                                      required:
                                      - external
                                    properties:
                                      external:
                                        description: |-
                                          The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.

                                          Allowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                            secretRef:
                              oneOf:
                              - not:
                                  required:
                                  - external
                                required:
                                - name
                              - not:
                                  anyOf:
                                  - required:
                                    - name
                                  - required:
                                    - namespace
                                required:
                                - external
                              properties:
                                external:
                                  description: |-
                                    Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.

                                    Allowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                              type: object
                          required:
                          - secretRef
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  vpcAccess:
                    description: VPC Access configuration to use for this Revision.
                      For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
                    properties:
                      connectorRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}

                              Allowed value: The Google Cloud resource name of a `VPCAccessConnector` resource (format: `projects/{{project}}/locations/{{location}}/connectors/{{name}}`).
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                      egress:
                        description: 'Traffic VPC egress settings. Possible values:
                          VPC_EGRESS_UNSPECIFIED, ALL_TRAFFIC, PRIVATE_RANGES_ONLY'
                        type: string
                    type: object
                type: object
              traffic:
                description: Specifies how to distribute traffic over a collection
                  of Revisions belonging to the Service. If traffic is empty or not
                  provided, defaults to 100% traffic to the latest `Ready` Revision.
                items:
                  properties:
                    percent:
                      description: Specifies percent of the traffic to this Revision.
                        This defaults to zero if unspecified. Cloud Run currently
                        requires 100 percent for a single TrafficTarget entry.
                      format: int64
                      type: integer
                    revision:
                      description: Revision to which to send this portion of traffic,
                        if traffic allocation is by revision.
                      type: string
                    tag:
                      description: Indicates a string to be part of the URI to exclusively
                        reference this target.
                      type: string
                    type:
                      description: 'The allocation type for this traffic target. Possible
                        values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST,
                        TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION'
                      type: string
                  type: object
                type: array
            required:
            - location
            - projectRef
            - template
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: Output only. The creation time.
                format: date-time
                type: string
              creator:
                description: Output only. Email address of the authenticated creator.
                type: string
              deleteTime:
                description: Output only. The deletion time.
                format: date-time
                type: string
              etag:
                description: Output only. A system-generated fingerprint for this
                  version of the resource. May be used to detect modification conflict
                  during updates.
                type: string
              expireTime:
                description: Output only. For a deleted resource, the time after which
                  it will be permamently deleted.
                format: date-time
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Map of string keys and values that can be used to organize
                  and categorize objects. User-provided labels are shared with Google's
                  billing system, so they can be used to filter, or break down billing
                  charges by team, component, environment, state, etc. For more information,
                  visit https://cloud.google.com/resource-manager/docs/creating-managing-labels
                  or https://cloud.google.com/run/docs/configuring/labels Cloud Run
                  will populate some labels with 'run.googleapis.com' or 'serving.knative.dev'
                  namespaces. Those labels are read-only, and user changes will not
                  be preserved.
                type: object
              lastModifier:
                description: Output only. Email address of the last authenticated
                  modifier.
                type: string
              latestCreatedRevision:
                description: Output only. Name of the last created revision. See comments
                  in `reconciling` for additional information on reconciliation process
                  in Cloud Run.
                type: string
              latestReadyRevision:
                description: Output only. Name of the latest revision that is serving
                  traffic. See comments in `reconciling` for additional information
                  on reconciliation process in Cloud Run.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              reconciling:
                description: 'Output only. Returns true if the Service is currently
                  being acted upon by the system to bring it into the desired state.
                  When a new Service is created, or an existing one is updated, Cloud
                  Run will asynchronously perform all necessary steps to bring the
                  Service to the desired serving state. This process is called reconciliation.
                  While reconciliation is in process, `observed_generation`, `latest_ready_revison`,
                  `traffic_statuses`, and `uri` will have transient values that might
                  mismatch the intended state: Once reconciliation is over (and this
                  field is false), there are two possible outcomes: reconciliation
                  succeeded and the serving state matches the Service, or there was
                  an error, and reconciliation failed. This state can be found in
                  `terminal_condition.state`. If reconciliation succeeded, the following
                  fields will match: `traffic` and `traffic_statuses`, `observed_generation`
                  and `generation`, `latest_ready_revision` and `latest_created_revision`.
                  If reconciliation failed, `traffic_statuses`, `observed_generation`,
                  and `latest_ready_revision` will have the state of the last serving
                  revision, or empty for newly created Services. Additional information
                  on the failure can be found in `terminal_condition` and `conditions`.'
                type: boolean
              resourceGeneration:
                description: Output only. A number that monotonically increases every
                  time the user modifies the desired state.
                format: int64
                type: integer
              terminalCondition:
                description: Output only. The Condition of this Service, containing
                  its readiness status, and detailed error information in case it
                  did not reach a serving state. See comments in `reconciling` for
                  additional information on reconciliation process in Cloud Run.
                properties:
                  jobReason:
                    description: 'A reason for the job condition. Possible values:
                      JOB_REASON_UNDEFINED, JOB_STATUS_SERVICE_POLLING_ERROR'
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  message:
                    description: Human readable message indicating details about the
                      current status.
                    type: string
                  reason:
                    description: 'A common (service-level) reason for this condition.
                      Possible values: COMMON_REASON_UNDEFINED, UNKNOWN, REVISION_FAILED,
                      PROGRESS_DEADLINE_EXCEEDED, CONTAINER_MISSING, CONTAINER_PERMISSION_DENIED,
                      CONTAINER_IMAGE_UNAUTHORIZED, CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED,
                      ENCRYPTION_KEY_PERMISSION_DENIED, ENCRYPTION_KEY_CHECK_FAILED,
                      SECRETS_ACCESS_CHECK_FAILED, WAITING_FOR_OPERATION, IMMEDIATE_RETRY,
                      POSTPONED_RETRY, INTERNAL'
                    type: string
                  revisionReason:
                    description: 'A reason for the revision condition. Possible values:
                      REVISION_REASON_UNDEFINED, PENDING, RESERVE, RETIRED, RETIRING,
                      RECREATING, HEALTH_CHECK_CONTAINER_ERROR, CUSTOMIZED_PATH_RESPONSE_PENDING,
                      MIN_INSTANCES_NOT_PROVISIONED, ACTIVE_REVISION_LIMIT_REACHED,
                      NO_DEPLOYMENT'
                    type: string
                  severity:
                    description: 'How to interpret failures of this condition, one
                      of Error, Warning, Info Possible values: SEVERITY_UNSPECIFIED,
                      ERROR, WARNING, INFO'
                    type: string
                  state:
                    description: 'State of the condition. Possible values: STATE_UNSPECIFIED,
                      CONDITION_PENDING, CONDITION_RECONCILING, CONDITION_FAILED,
                      CONDITION_SUCCEEDED'
                    type: string
                  type:
                    description: 'type is used to communicate the status of the reconciliation
                      process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting
                      Types common to all resources include: * "Ready": True when
                      the Resource is ready.'
                    type: string
                type: object
              trafficStatuses:
                description: Output only. Detailed status information for corresponding
                  traffic targets. See comments in `reconciling` for additional information
                  on reconciliation process in Cloud Run.
                items:
                  properties:
                    percent:
                      description: Specifies percent of the traffic to this Revision.
                      format: int64
                      type: integer
                    revision:
                      description: Revision to which this traffic is sent.
                      type: string
                    tag:
                      description: Indicates the string used in the URI to exclusively
                        reference this target.
                      type: string
                    type:
                      description: 'The allocation type for this traffic target. Possible
                        values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST,
                        TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION'
                      type: string
                    uri:
                      description: Displays the target URI.
                      type: string
                  type: object
                type: array
              uid:
                description: Output only. Server assigned unique identifier for the
                  trigger. The value is a UUID4 string and guaranteed to remain unchanged
                  until the resource is deleted.
                type: string
              updateTime:
                description: Output only. The last-modified time.
                format: date-time
                type: string
              uri:
                description: Output only. The main URI in which this Service is serving
                  traffic.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
